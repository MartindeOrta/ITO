{
	"id": "254b795f0c1cfd427b293dacf8f0c5f6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"exchange.sol": {
				"content": "//// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ninterface MintableERC20 is IERC20{\r\n        \r\n    function mint(address to, uint256 amount) external;\r\n}\r\n\r\ncontract Exchange is  Ownable{\r\n\r\n    IERC20 public ARST;\r\n    MintableERC20 public MPP;\r\n    uint256 price;\r\n    event BUY(address who, uint256 amount);\r\n    constructor(address _ARST, address _MPP, uint256 _price) Ownable(msg.sender) {\r\n        ARST = IERC20(_ARST);\r\n        MPP = MintableERC20(_MPP);\r\n        price = _price;\r\n    }\r\n\r\n    function buy(uint256 _amountARST) external{\r\n        //aprove\r\n        ARST.transferFrom( msg.sender,  address(this),      _amountARST) ;\r\n        uint256 _amountMPP = _amountARST * price;\r\n        MPP.mint(msg.sender, _amountMPP);\r\n        emit BUY(msg.sender, _amountMPP);\r\n    }\r\n\r\n    function extracARST() external onlyOwner{\r\n        ARST.transfer(msg.sender,ARST.balanceOf(address(this)));\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"exchange.sol": {
				"Exchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ARST",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_MPP",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "who",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BUY",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ARST",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MPP",
							"outputs": [
								{
									"internalType": "contract MintableERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountARST",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "extracARST",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"exchange.sol\":287:1039  contract Exchange is  Ownable{... */\n  mstore(0x40, 0x80)\n    /* \"exchange.sol\":446:623  constructor(address _ARST, address _MPP, uint256 _price) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"exchange.sol\":511:521  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"exchange.sol\":548:553  _ARST */\n  dup3\n    /* \"exchange.sol\":534:538  ARST */\n  0x01\n  0x00\n    /* \"exchange.sol\":534:554  ARST = IERC20(_ARST) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"exchange.sol\":585:589  _MPP */\n  dup2\n    /* \"exchange.sol\":565:568  MPP */\n  0x02\n  0x00\n    /* \"exchange.sol\":565:590  MPP = MintableERC20(_MPP) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"exchange.sol\":609:615  _price */\n  dup1\n    /* \"exchange.sol\":601:606  price */\n  0x03\n    /* \"exchange.sol\":601:615  price = _price */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"exchange.sol\":446:623  constructor(address _ARST, address _MPP, uint256 _price) Ownable(msg.sender) {... */\n  pop\n  pop\n  pop\n    /* \"exchange.sol\":287:1039  contract Exchange is  Ownable{... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_34\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_35:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_37\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_22:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_23:\n    /* \"#utility.yul\":1001:1025   */\n  tag_40\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_41:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_24:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_43\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_23\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_46\n  tag_16\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1326:1445   */\ntag_45:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_47\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_21\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_48\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_49\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1992   */\ntag_25:\n    /* \"#utility.yul\":1961:1985   */\n  tag_51\n    /* \"#utility.yul\":1979:1984   */\n  dup2\n    /* \"#utility.yul\":1961:1985   */\n  tag_19\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1949:1986   */\n  mstore\n    /* \"#utility.yul\":1874:1992   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2220   */\ntag_9:\n    /* \"#utility.yul\":2091:2095   */\n  0x00\n    /* \"#utility.yul\":2129:2131   */\n  0x20\n    /* \"#utility.yul\":2118:2127   */\n  dup3\n    /* \"#utility.yul\":2114:2132   */\n  add\n    /* \"#utility.yul\":2106:2132   */\n  swap1\n  pop\n    /* \"#utility.yul\":2142:2213   */\n  tag_53\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2199:2208   */\n  dup4\n    /* \"#utility.yul\":2195:2212   */\n  add\n    /* \"#utility.yul\":2186:2192   */\n  dup5\n    /* \"#utility.yul\":2142:2213   */\n  tag_25\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1998:2220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"exchange.sol\":287:1039  contract Exchange is  Ownable{... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"exchange.sol\":287:1039  contract Exchange is  Ownable{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8b926a56\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8b926a56\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x06a5ea38\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x414d91e8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"exchange.sol\":920:1034  function extracARST() external onlyOwner{... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"exchange.sol\":325:343  IERC20 public ARST */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"exchange.sol\":350:374  MintableERC20 public MPP */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"exchange.sol\":631:912  function buy(uint256 _amountARST) external{... */\n    tag_8:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"exchange.sol\":920:1034  function extracARST() external onlyOwner{... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_36:\n        /* \"exchange.sol\":971:975  ARST */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"exchange.sol\":971:984  ARST.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"exchange.sol\":985:995  msg.sender */\n      caller\n        /* \"exchange.sol\":996:1000  ARST */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"exchange.sol\":996:1010  ARST.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"exchange.sol\":1019:1023  this */\n      address\n        /* \"exchange.sol\":996:1025  ARST.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_39:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"exchange.sol\":971:1026  ARST.transfer(msg.sender,ARST.balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_47:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      pop\n        /* \"exchange.sol\":920:1034  function extracARST() external onlyOwner{... */\n      jump\t// out\n        /* \"exchange.sol\":325:343  IERC20 public ARST */\n    tag_14:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"exchange.sol\":350:374  MintableERC20 public MPP */\n    tag_20:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"exchange.sol\":631:912  function buy(uint256 _amountARST) external{... */\n    tag_30:\n        /* \"exchange.sol\":702:706  ARST */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"exchange.sol\":702:719  ARST.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"exchange.sol\":721:731  msg.sender */\n      caller\n        /* \"exchange.sol\":742:746  this */\n      address\n        /* \"exchange.sol\":754:765  _amountARST */\n      dup5\n        /* \"exchange.sol\":702:766  ARST.transferFrom( msg.sender,  address(this),      _amountARST) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_61:\n      pop\n        /* \"exchange.sol\":778:796  uint256 _amountMPP */\n      0x00\n        /* \"exchange.sol\":813:818  price */\n      sload(0x03)\n        /* \"exchange.sol\":799:810  _amountARST */\n      dup3\n        /* \"exchange.sol\":799:818  _amountARST * price */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"exchange.sol\":778:818  uint256 _amountMPP = _amountARST * price */\n      swap1\n      pop\n        /* \"exchange.sol\":829:832  MPP */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"exchange.sol\":829:837  MPP.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"exchange.sol\":838:848  msg.sender */\n      caller\n        /* \"exchange.sol\":850:860  _amountMPP */\n      dup4\n        /* \"exchange.sol\":829:861  MPP.mint(msg.sender, _amountMPP) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_64:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n        /* \"exchange.sol\":877:904  BUY(msg.sender, _amountMPP) */\n      0x11c42a99bcddc27eea781499d4d35f138c3b2fbd9da68cdd570892a40838222b\n        /* \"exchange.sol\":881:891  msg.sender */\n      caller\n        /* \"exchange.sol\":893:903  _amountMPP */\n      dup3\n        /* \"exchange.sol\":877:904  BUY(msg.sender, _amountMPP) */\n      mload(0x40)\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"exchange.sol\":673:912  {... */\n      pop\n        /* \"exchange.sol\":631:912  function buy(uint256 _amountARST) external{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_72\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_24\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_79\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_84:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_85:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_86:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_112\n        /* \"#utility.yul\":306:340   */\n      tag_113\n        /* \"#utility.yul\":315:339   */\n      tag_114\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_84\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":306:340   */\n      tag_85\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":288:341   */\n      tag_84\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_87:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_116\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_86\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_88:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_118\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_87\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_89:\n        /* \"#utility.yul\":732:783   */\n      tag_120\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_88\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_16:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_122\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_89\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1199   */\n    tag_90:\n        /* \"#utility.yul\":1123:1132   */\n      0x00\n        /* \"#utility.yul\":1156:1193   */\n      tag_124\n        /* \"#utility.yul\":1187:1192   */\n      dup3\n        /* \"#utility.yul\":1156:1193   */\n      tag_87\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1143:1193   */\n      swap1\n      pop\n        /* \"#utility.yul\":1052:1199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1205:1378   */\n    tag_91:\n        /* \"#utility.yul\":1313:1371   */\n      tag_126\n        /* \"#utility.yul\":1365:1370   */\n      dup2\n        /* \"#utility.yul\":1313:1371   */\n      tag_90\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1308:1311   */\n      dup3\n        /* \"#utility.yul\":1301:1372   */\n      mstore\n        /* \"#utility.yul\":1205:1378   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1384:1648   */\n    tag_22:\n        /* \"#utility.yul\":1498:1502   */\n      0x00\n        /* \"#utility.yul\":1536:1538   */\n      0x20\n        /* \"#utility.yul\":1525:1534   */\n      dup3\n        /* \"#utility.yul\":1521:1539   */\n      add\n        /* \"#utility.yul\":1513:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1549:1641   */\n      tag_128\n        /* \"#utility.yul\":1638:1639   */\n      0x00\n        /* \"#utility.yul\":1627:1636   */\n      dup4\n        /* \"#utility.yul\":1623:1640   */\n      add\n        /* \"#utility.yul\":1614:1620   */\n      dup5\n        /* \"#utility.yul\":1549:1641   */\n      tag_91\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1384:1648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1654:1750   */\n    tag_92:\n        /* \"#utility.yul\":1691:1698   */\n      0x00\n        /* \"#utility.yul\":1720:1744   */\n      tag_130\n        /* \"#utility.yul\":1738:1743   */\n      dup3\n        /* \"#utility.yul\":1720:1744   */\n      tag_84\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1709:1744   */\n      swap1\n      pop\n        /* \"#utility.yul\":1654:1750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1874   */\n    tag_93:\n        /* \"#utility.yul\":1843:1867   */\n      tag_132\n        /* \"#utility.yul\":1861:1866   */\n      dup2\n        /* \"#utility.yul\":1843:1867   */\n      tag_92\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1838:1841   */\n      dup3\n        /* \"#utility.yul\":1831:1868   */\n      mstore\n        /* \"#utility.yul\":1756:1874   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2102   */\n    tag_26:\n        /* \"#utility.yul\":1973:1977   */\n      0x00\n        /* \"#utility.yul\":2011:2013   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1996:2014   */\n      add\n        /* \"#utility.yul\":1988:2014   */\n      swap1\n      pop\n        /* \"#utility.yul\":2024:2095   */\n      tag_134\n        /* \"#utility.yul\":2092:2093   */\n      0x00\n        /* \"#utility.yul\":2081:2090   */\n      dup4\n        /* \"#utility.yul\":2077:2094   */\n      add\n        /* \"#utility.yul\":2068:2074   */\n      dup5\n        /* \"#utility.yul\":2024:2095   */\n      tag_93\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1880:2102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2189:2306   */\n    tag_95:\n        /* \"#utility.yul\":2298:2299   */\n      0x00\n        /* \"#utility.yul\":2295:2296   */\n      dup1\n        /* \"#utility.yul\":2288:2300   */\n      revert\n        /* \"#utility.yul\":2435:2512   */\n    tag_97:\n        /* \"#utility.yul\":2472:2479   */\n      0x00\n        /* \"#utility.yul\":2501:2506   */\n      dup2\n        /* \"#utility.yul\":2490:2506   */\n      swap1\n      pop\n        /* \"#utility.yul\":2435:2512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2640   */\n    tag_98:\n        /* \"#utility.yul\":2591:2615   */\n      tag_140\n        /* \"#utility.yul\":2609:2614   */\n      dup2\n        /* \"#utility.yul\":2591:2615   */\n      tag_97\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2584:2589   */\n      dup2\n        /* \"#utility.yul\":2581:2616   */\n      eq\n        /* \"#utility.yul\":2571:2634   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":2630:2631   */\n      0x00\n        /* \"#utility.yul\":2627:2628   */\n      dup1\n        /* \"#utility.yul\":2620:2632   */\n      revert\n        /* \"#utility.yul\":2571:2634   */\n    tag_141:\n        /* \"#utility.yul\":2518:2640   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2646:2785   */\n    tag_99:\n        /* \"#utility.yul\":2692:2697   */\n      0x00\n        /* \"#utility.yul\":2730:2736   */\n      dup2\n        /* \"#utility.yul\":2717:2737   */\n      calldataload\n        /* \"#utility.yul\":2708:2737   */\n      swap1\n      pop\n        /* \"#utility.yul\":2746:2779   */\n      tag_143\n        /* \"#utility.yul\":2773:2778   */\n      dup2\n        /* \"#utility.yul\":2746:2779   */\n      tag_98\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":2646:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:3120   */\n    tag_29:\n        /* \"#utility.yul\":2850:2856   */\n      0x00\n        /* \"#utility.yul\":2899:2901   */\n      0x20\n        /* \"#utility.yul\":2887:2896   */\n      dup3\n        /* \"#utility.yul\":2878:2885   */\n      dup5\n        /* \"#utility.yul\":2874:2897   */\n      sub\n        /* \"#utility.yul\":2870:2902   */\n      slt\n        /* \"#utility.yul\":2867:2986   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":2905:2984   */\n      tag_146\n      tag_95\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2867:2986   */\n    tag_145:\n        /* \"#utility.yul\":3025:3026   */\n      0x00\n        /* \"#utility.yul\":3050:3103   */\n      tag_147\n        /* \"#utility.yul\":3095:3102   */\n      dup5\n        /* \"#utility.yul\":3086:3092   */\n      dup3\n        /* \"#utility.yul\":3075:3084   */\n      dup6\n        /* \"#utility.yul\":3071:3093   */\n      add\n        /* \"#utility.yul\":3050:3103   */\n      tag_99\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3040:3103   */\n      swap2\n      pop\n        /* \"#utility.yul\":2996:3113   */\n      pop\n        /* \"#utility.yul\":2791:3120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3126:3248   */\n    tag_100:\n        /* \"#utility.yul\":3199:3223   */\n      tag_149\n        /* \"#utility.yul\":3217:3222   */\n      dup2\n        /* \"#utility.yul\":3199:3223   */\n      tag_92\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":3192:3197   */\n      dup2\n        /* \"#utility.yul\":3189:3224   */\n      eq\n        /* \"#utility.yul\":3179:3242   */\n      tag_150\n      jumpi\n        /* \"#utility.yul\":3238:3239   */\n      0x00\n        /* \"#utility.yul\":3235:3236   */\n      dup1\n        /* \"#utility.yul\":3228:3240   */\n      revert\n        /* \"#utility.yul\":3179:3242   */\n    tag_150:\n        /* \"#utility.yul\":3126:3248   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3254:3393   */\n    tag_101:\n        /* \"#utility.yul\":3300:3305   */\n      0x00\n        /* \"#utility.yul\":3338:3344   */\n      dup2\n        /* \"#utility.yul\":3325:3345   */\n      calldataload\n        /* \"#utility.yul\":3316:3345   */\n      swap1\n      pop\n        /* \"#utility.yul\":3354:3387   */\n      tag_152\n        /* \"#utility.yul\":3381:3386   */\n      dup2\n        /* \"#utility.yul\":3354:3387   */\n      tag_100\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":3254:3393   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3399:3728   */\n    tag_33:\n        /* \"#utility.yul\":3458:3464   */\n      0x00\n        /* \"#utility.yul\":3507:3509   */\n      0x20\n        /* \"#utility.yul\":3495:3504   */\n      dup3\n        /* \"#utility.yul\":3486:3493   */\n      dup5\n        /* \"#utility.yul\":3482:3505   */\n      sub\n        /* \"#utility.yul\":3478:3510   */\n      slt\n        /* \"#utility.yul\":3475:3594   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":3513:3592   */\n      tag_155\n      tag_95\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":3475:3594   */\n    tag_154:\n        /* \"#utility.yul\":3633:3634   */\n      0x00\n        /* \"#utility.yul\":3658:3711   */\n      tag_156\n        /* \"#utility.yul\":3703:3710   */\n      dup5\n        /* \"#utility.yul\":3694:3700   */\n      dup3\n        /* \"#utility.yul\":3683:3692   */\n      dup6\n        /* \"#utility.yul\":3679:3701   */\n      add\n        /* \"#utility.yul\":3658:3711   */\n      tag_101\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3648:3711   */\n      swap2\n      pop\n        /* \"#utility.yul\":3604:3721   */\n      pop\n        /* \"#utility.yul\":3399:3728   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3734:3877   */\n    tag_102:\n        /* \"#utility.yul\":3791:3796   */\n      0x00\n        /* \"#utility.yul\":3822:3828   */\n      dup2\n        /* \"#utility.yul\":3816:3829   */\n      mload\n        /* \"#utility.yul\":3807:3829   */\n      swap1\n      pop\n        /* \"#utility.yul\":3838:3871   */\n      tag_158\n        /* \"#utility.yul\":3865:3870   */\n      dup2\n        /* \"#utility.yul\":3838:3871   */\n      tag_98\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3734:3877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4234   */\n    tag_43:\n        /* \"#utility.yul\":3953:3959   */\n      0x00\n        /* \"#utility.yul\":4002:4004   */\n      0x20\n        /* \"#utility.yul\":3990:3999   */\n      dup3\n        /* \"#utility.yul\":3981:3988   */\n      dup5\n        /* \"#utility.yul\":3977:4000   */\n      sub\n        /* \"#utility.yul\":3973:4005   */\n      slt\n        /* \"#utility.yul\":3970:4089   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":4008:4087   */\n      tag_161\n      tag_95\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3970:4089   */\n    tag_160:\n        /* \"#utility.yul\":4128:4129   */\n      0x00\n        /* \"#utility.yul\":4153:4217   */\n      tag_162\n        /* \"#utility.yul\":4209:4216   */\n      dup5\n        /* \"#utility.yul\":4200:4206   */\n      dup3\n        /* \"#utility.yul\":4189:4198   */\n      dup6\n        /* \"#utility.yul\":4185:4207   */\n      add\n        /* \"#utility.yul\":4153:4217   */\n      tag_102\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4143:4217   */\n      swap2\n      pop\n        /* \"#utility.yul\":4099:4227   */\n      pop\n        /* \"#utility.yul\":3883:4234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4240:4358   */\n    tag_103:\n        /* \"#utility.yul\":4327:4351   */\n      tag_164\n        /* \"#utility.yul\":4345:4350   */\n      dup2\n        /* \"#utility.yul\":4327:4351   */\n      tag_97\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4322:4325   */\n      dup3\n        /* \"#utility.yul\":4315:4352   */\n      mstore\n        /* \"#utility.yul\":4240:4358   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4364:4696   */\n    tag_45:\n        /* \"#utility.yul\":4485:4489   */\n      0x00\n        /* \"#utility.yul\":4523:4525   */\n      0x40\n        /* \"#utility.yul\":4512:4521   */\n      dup3\n        /* \"#utility.yul\":4508:4526   */\n      add\n        /* \"#utility.yul\":4500:4526   */\n      swap1\n      pop\n        /* \"#utility.yul\":4536:4607   */\n      tag_166\n        /* \"#utility.yul\":4604:4605   */\n      0x00\n        /* \"#utility.yul\":4593:4602   */\n      dup4\n        /* \"#utility.yul\":4589:4606   */\n      add\n        /* \"#utility.yul\":4580:4586   */\n      dup6\n        /* \"#utility.yul\":4536:4607   */\n      tag_93\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4617:4689   */\n      tag_167\n        /* \"#utility.yul\":4685:4687   */\n      0x20\n        /* \"#utility.yul\":4674:4683   */\n      dup4\n        /* \"#utility.yul\":4670:4688   */\n      add\n        /* \"#utility.yul\":4661:4667   */\n      dup5\n        /* \"#utility.yul\":4617:4689   */\n      tag_103\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":4364:4696   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4702:4792   */\n    tag_104:\n        /* \"#utility.yul\":4736:4743   */\n      0x00\n        /* \"#utility.yul\":4779:4784   */\n      dup2\n        /* \"#utility.yul\":4772:4785   */\n      iszero\n        /* \"#utility.yul\":4765:4786   */\n      iszero\n        /* \"#utility.yul\":4754:4786   */\n      swap1\n      pop\n        /* \"#utility.yul\":4702:4792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4798:4914   */\n    tag_105:\n        /* \"#utility.yul\":4868:4889   */\n      tag_170\n        /* \"#utility.yul\":4883:4888   */\n      dup2\n        /* \"#utility.yul\":4868:4889   */\n      tag_104\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4861:4866   */\n      dup2\n        /* \"#utility.yul\":4858:4890   */\n      eq\n        /* \"#utility.yul\":4848:4908   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":4904:4905   */\n      0x00\n        /* \"#utility.yul\":4901:4902   */\n      dup1\n        /* \"#utility.yul\":4894:4906   */\n      revert\n        /* \"#utility.yul\":4848:4908   */\n    tag_171:\n        /* \"#utility.yul\":4798:4914   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4920:5057   */\n    tag_106:\n        /* \"#utility.yul\":4974:4979   */\n      0x00\n        /* \"#utility.yul\":5005:5011   */\n      dup2\n        /* \"#utility.yul\":4999:5012   */\n      mload\n        /* \"#utility.yul\":4990:5012   */\n      swap1\n      pop\n        /* \"#utility.yul\":5021:5051   */\n      tag_173\n        /* \"#utility.yul\":5045:5050   */\n      dup2\n        /* \"#utility.yul\":5021:5051   */\n      tag_105\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4920:5057   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5063:5408   */\n    tag_49:\n        /* \"#utility.yul\":5130:5136   */\n      0x00\n        /* \"#utility.yul\":5179:5181   */\n      0x20\n        /* \"#utility.yul\":5167:5176   */\n      dup3\n        /* \"#utility.yul\":5158:5165   */\n      dup5\n        /* \"#utility.yul\":5154:5177   */\n      sub\n        /* \"#utility.yul\":5150:5182   */\n      slt\n        /* \"#utility.yul\":5147:5266   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":5185:5264   */\n      tag_176\n      tag_95\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5147:5266   */\n    tag_175:\n        /* \"#utility.yul\":5305:5306   */\n      0x00\n        /* \"#utility.yul\":5330:5391   */\n      tag_177\n        /* \"#utility.yul\":5383:5390   */\n      dup5\n        /* \"#utility.yul\":5374:5380   */\n      dup3\n        /* \"#utility.yul\":5363:5372   */\n      dup6\n        /* \"#utility.yul\":5359:5381   */\n      add\n        /* \"#utility.yul\":5330:5391   */\n      tag_106\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5320:5391   */\n      swap2\n      pop\n        /* \"#utility.yul\":5276:5401   */\n      pop\n        /* \"#utility.yul\":5063:5408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5414:5856   */\n    tag_58:\n        /* \"#utility.yul\":5563:5567   */\n      0x00\n        /* \"#utility.yul\":5601:5603   */\n      0x60\n        /* \"#utility.yul\":5590:5599   */\n      dup3\n        /* \"#utility.yul\":5586:5604   */\n      add\n        /* \"#utility.yul\":5578:5604   */\n      swap1\n      pop\n        /* \"#utility.yul\":5614:5685   */\n      tag_179\n        /* \"#utility.yul\":5682:5683   */\n      0x00\n        /* \"#utility.yul\":5671:5680   */\n      dup4\n        /* \"#utility.yul\":5667:5684   */\n      add\n        /* \"#utility.yul\":5658:5664   */\n      dup7\n        /* \"#utility.yul\":5614:5685   */\n      tag_93\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5695:5767   */\n      tag_180\n        /* \"#utility.yul\":5763:5765   */\n      0x20\n        /* \"#utility.yul\":5752:5761   */\n      dup4\n        /* \"#utility.yul\":5748:5766   */\n      add\n        /* \"#utility.yul\":5739:5745   */\n      dup6\n        /* \"#utility.yul\":5695:5767   */\n      tag_93\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5777:5849   */\n      tag_181\n        /* \"#utility.yul\":5845:5847   */\n      0x40\n        /* \"#utility.yul\":5834:5843   */\n      dup4\n        /* \"#utility.yul\":5830:5848   */\n      add\n        /* \"#utility.yul\":5821:5827   */\n      dup5\n        /* \"#utility.yul\":5777:5849   */\n      tag_103\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":5414:5856   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5862:6042   */\n    tag_107:\n        /* \"#utility.yul\":5910:5987   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5907:5908   */\n      0x00\n        /* \"#utility.yul\":5900:5988   */\n      mstore\n        /* \"#utility.yul\":6007:6011   */\n      0x11\n        /* \"#utility.yul\":6004:6005   */\n      0x04\n        /* \"#utility.yul\":5997:6012   */\n      mstore\n        /* \"#utility.yul\":6031:6035   */\n      0x24\n        /* \"#utility.yul\":6028:6029   */\n      0x00\n        /* \"#utility.yul\":6021:6036   */\n      revert\n        /* \"#utility.yul\":6048:6458   */\n    tag_63:\n        /* \"#utility.yul\":6088:6095   */\n      0x00\n        /* \"#utility.yul\":6111:6131   */\n      tag_184\n        /* \"#utility.yul\":6129:6130   */\n      dup3\n        /* \"#utility.yul\":6111:6131   */\n      tag_97\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6106:6131   */\n      swap2\n      pop\n        /* \"#utility.yul\":6145:6165   */\n      tag_185\n        /* \"#utility.yul\":6163:6164   */\n      dup4\n        /* \"#utility.yul\":6145:6165   */\n      tag_97\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":6140:6165   */\n      swap3\n      pop\n        /* \"#utility.yul\":6200:6201   */\n      dup3\n        /* \"#utility.yul\":6197:6198   */\n      dup3\n        /* \"#utility.yul\":6193:6202   */\n      mul\n        /* \"#utility.yul\":6222:6252   */\n      tag_186\n        /* \"#utility.yul\":6240:6251   */\n      dup2\n        /* \"#utility.yul\":6222:6252   */\n      tag_97\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6211:6252   */\n      swap2\n      pop\n        /* \"#utility.yul\":6401:6402   */\n      dup3\n        /* \"#utility.yul\":6392:6399   */\n      dup3\n        /* \"#utility.yul\":6388:6403   */\n      div\n        /* \"#utility.yul\":6385:6386   */\n      dup5\n        /* \"#utility.yul\":6382:6404   */\n      eq\n        /* \"#utility.yul\":6362:6363   */\n      dup4\n        /* \"#utility.yul\":6355:6364   */\n      iszero\n        /* \"#utility.yul\":6335:6418   */\n      or\n        /* \"#utility.yul\":6312:6451   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":6431:6449   */\n      tag_188\n      tag_107\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6312:6451   */\n    tag_187:\n        /* \"#utility.yul\":6096:6458   */\n      pop\n        /* \"#utility.yul\":6048:6458   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d8a92e56861f47d4b541b4704b24c25515b669f947f2b6e44057a5e16ca6856764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_315": {
									"entryPoint": null,
									"id": 315,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 321,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2223:4",
										"nodeType": "YulBlock",
										"src": "0:2223:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "890:32:4",
													"nodeType": "YulBlock",
													"src": "890:32:4",
													"statements": [
														{
															"nativeSrc": "900:16:4",
															"nodeType": "YulAssignment",
															"src": "900:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:4",
																"nodeType": "YulIdentifier",
																"src": "911:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:4",
														"nodeType": "YulTypedName",
														"src": "872:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:4",
														"nodeType": "YulTypedName",
														"src": "882:7:4",
														"type": ""
													}
												],
												"src": "845:77:4"
											},
											{
												"body": {
													"nativeSrc": "971:79:4",
													"nodeType": "YulBlock",
													"src": "971:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:4",
																"nodeType": "YulBlock",
																"src": "1028:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:4"
																			},
																			"nativeSrc": "1030:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:4"
																		},
																		"nativeSrc": "1030:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:4"
																				},
																				"nativeSrc": "1001:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:4"
																		},
																		"nativeSrc": "991:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:4"
																},
																"nativeSrc": "984:43:4",
																"nodeType": "YulFunctionCall",
																"src": "984:43:4"
															},
															"nativeSrc": "981:63:4",
															"nodeType": "YulIf",
															"src": "981:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:4",
														"nodeType": "YulTypedName",
														"src": "964:5:4",
														"type": ""
													}
												],
												"src": "928:122:4"
											},
											{
												"body": {
													"nativeSrc": "1119:80:4",
													"nodeType": "YulBlock",
													"src": "1119:80:4",
													"statements": [
														{
															"nativeSrc": "1129:22:4",
															"nodeType": "YulAssignment",
															"src": "1129:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:4"
																},
																"nativeSrc": "1138:13:4",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:4"
																},
																"nativeSrc": "1160:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:4"
															},
															"nativeSrc": "1160:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:4",
														"nodeType": "YulTypedName",
														"src": "1097:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:4",
														"nodeType": "YulTypedName",
														"src": "1105:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:4",
														"nodeType": "YulTypedName",
														"src": "1113:5:4",
														"type": ""
													}
												],
												"src": "1056:143:4"
											},
											{
												"body": {
													"nativeSrc": "1316:552:4",
													"nodeType": "YulBlock",
													"src": "1316:552:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:4",
																"nodeType": "YulBlock",
																"src": "1362:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:4"
																			},
																			"nativeSrc": "1364:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:4"
																		},
																		"nativeSrc": "1364:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:4"
																		},
																		"nativeSrc": "1333:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:4"
																},
																"nativeSrc": "1329:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:4"
															},
															"nativeSrc": "1326:119:4",
															"nodeType": "YulIf",
															"src": "1326:119:4"
														},
														{
															"nativeSrc": "1455:128:4",
															"nodeType": "YulBlock",
															"src": "1455:128:4",
															"statements": [
																{
																	"nativeSrc": "1470:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:4"
																				},
																				"nativeSrc": "1541:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1509:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:4"
																		},
																		"nativeSrc": "1509:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:4",
															"nodeType": "YulBlock",
															"src": "1593:129:4",
															"statements": [
																{
																	"nativeSrc": "1608:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:4"
																				},
																				"nativeSrc": "1680:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1648:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:4"
																		},
																		"nativeSrc": "1648:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:4",
															"nodeType": "YulBlock",
															"src": "1732:129:4",
															"statements": [
																{
																	"nativeSrc": "1747:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:4"
																				},
																				"nativeSrc": "1819:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1787:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:4"
																		},
																		"nativeSrc": "1787:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:663:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:4",
														"nodeType": "YulTypedName",
														"src": "1270:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:4",
														"nodeType": "YulTypedName",
														"src": "1281:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:4",
														"nodeType": "YulTypedName",
														"src": "1293:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:4",
														"nodeType": "YulTypedName",
														"src": "1301:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:4",
														"nodeType": "YulTypedName",
														"src": "1309:6:4",
														"type": ""
													}
												],
												"src": "1205:663:4"
											},
											{
												"body": {
													"nativeSrc": "1939:53:4",
													"nodeType": "YulBlock",
													"src": "1939:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1956:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1979:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1961:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:4"
																		},
																		"nativeSrc": "1961:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1949:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:4"
																},
																"nativeSrc": "1949:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1949:37:4"
															},
															"nativeSrc": "1949:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1874:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1927:5:4",
														"nodeType": "YulTypedName",
														"src": "1927:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1934:3:4",
														"nodeType": "YulTypedName",
														"src": "1934:3:4",
														"type": ""
													}
												],
												"src": "1874:118:4"
											},
											{
												"body": {
													"nativeSrc": "2096:124:4",
													"nodeType": "YulBlock",
													"src": "2096:124:4",
													"statements": [
														{
															"nativeSrc": "2106:26:4",
															"nodeType": "YulAssignment",
															"src": "2106:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2118:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2129:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2114:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:4"
																},
																"nativeSrc": "2114:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2114:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2106:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2186:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2199:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2210:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2195:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:4"
																		},
																		"nativeSrc": "2195:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2142:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:4"
																},
																"nativeSrc": "2142:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2142:71:4"
															},
															"nativeSrc": "2142:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1998:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2068:9:4",
														"nodeType": "YulTypedName",
														"src": "2068:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2080:6:4",
														"nodeType": "YulTypedName",
														"src": "2080:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2091:4:4",
														"nodeType": "YulTypedName",
														"src": "2091:4:4",
														"type": ""
													}
												],
												"src": "1998:222:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610cb3380380610cb383398181016040528101906100319190610293565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102f2565b60405180910390fd5b6100b18161014160201b60201c565b508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060038190555050505061030b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022f82610206565b9050919050565b61023f81610225565b8114610249575f80fd5b50565b5f8151905061025a81610236565b92915050565b5f819050919050565b61027281610260565b811461027c575f80fd5b50565b5f8151905061028d81610269565b92915050565b5f805f606084860312156102aa576102a9610202565b5b5f6102b78682870161024c565b93505060206102c88682870161024c565b92505060406102d98682870161027f565b9150509250925092565b6102ec81610225565b82525050565b5f6020820190506103055f8301846102e3565b92915050565b61099b806103185f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c80638b926a56116100595780638b926a56146100b15780638da5cb5b146100cf578063d96a094a146100ed578063f2fde38b146101095761007b565b806306a5ea381461007f578063414d91e814610089578063715018a6146100a7575b5f80fd5b610087610125565b005b610091610264565b60405161009e91906106ab565b60405180910390f35b6100af610289565b005b6100b961029c565b6040516100c691906106e4565b60405180910390f35b6100d76102c1565b6040516100e4919061071d565b60405180910390f35b6101076004803603810190610102919061076d565b6102e8565b005b610123600480360381019061011e91906107c2565b61045e565b005b61012d6104e2565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101c5919061071d565b602060405180830381865afa1580156101e0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102049190610801565b6040518363ffffffff1660e01b815260040161022192919061083b565b6020604051808303815f875af115801561023d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102619190610897565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102916104e2565b61029a5f610569565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610346939291906108c2565b6020604051808303815f875af1158015610362573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103869190610897565b505f600354826103969190610924565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016103f492919061083b565b5f604051808303815f87803b15801561040b575f80fd5b505af115801561041d573d5f803e3d5ffd5b505050507f11c42a99bcddc27eea781499d4d35f138c3b2fbd9da68cdd570892a40838222b338260405161045292919061083b565b60405180910390a15050565b6104666104e2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104d6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104cd919061071d565b60405180910390fd5b6104df81610569565b50565b6104ea61062a565b73ffffffffffffffffffffffffffffffffffffffff166105086102c1565b73ffffffffffffffffffffffffffffffffffffffff16146105675761052b61062a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161055e919061071d565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61067361066e61066984610631565b610650565b610631565b9050919050565b5f61068482610659565b9050919050565b5f6106958261067a565b9050919050565b6106a58161068b565b82525050565b5f6020820190506106be5f83018461069c565b92915050565b5f6106ce8261067a565b9050919050565b6106de816106c4565b82525050565b5f6020820190506106f75f8301846106d5565b92915050565b5f61070782610631565b9050919050565b610717816106fd565b82525050565b5f6020820190506107305f83018461070e565b92915050565b5f80fd5b5f819050919050565b61074c8161073a565b8114610756575f80fd5b50565b5f8135905061076781610743565b92915050565b5f6020828403121561078257610781610736565b5b5f61078f84828501610759565b91505092915050565b6107a1816106fd565b81146107ab575f80fd5b50565b5f813590506107bc81610798565b92915050565b5f602082840312156107d7576107d6610736565b5b5f6107e4848285016107ae565b91505092915050565b5f815190506107fb81610743565b92915050565b5f6020828403121561081657610815610736565b5b5f610823848285016107ed565b91505092915050565b6108358161073a565b82525050565b5f60408201905061084e5f83018561070e565b61085b602083018461082c565b9392505050565b5f8115159050919050565b61087681610862565b8114610880575f80fd5b50565b5f815190506108918161086d565b92915050565b5f602082840312156108ac576108ab610736565b5b5f6108b984828501610883565b91505092915050565b5f6060820190506108d55f83018661070e565b6108e2602083018561070e565b6108ef604083018461082c565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61092e8261073a565b91506109398361073a565b92508282026109478161073a565b9150828204841483151761095e5761095d6108f7565b5b509291505056fea2646970667358221220d8a92e56861f47d4b541b4704b24c25515b669f947f2b6e44057a5e16ca6856764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCB3 CODESIZE SUB DUP1 PUSH2 0xCB3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x293 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x141 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x30B JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22F DUP3 PUSH2 0x206 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23F DUP2 PUSH2 0x225 JUMP JUMPDEST DUP2 EQ PUSH2 0x249 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x25A DUP2 PUSH2 0x236 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272 DUP2 PUSH2 0x260 JUMP JUMPDEST DUP2 EQ PUSH2 0x27C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28D DUP2 PUSH2 0x269 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AA JUMPI PUSH2 0x2A9 PUSH2 0x202 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B7 DUP7 DUP3 DUP8 ADD PUSH2 0x24C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2C8 DUP7 DUP3 DUP8 ADD PUSH2 0x24C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D9 DUP7 DUP3 DUP8 ADD PUSH2 0x27F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2EC DUP2 PUSH2 0x225 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x305 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x99B DUP1 PUSH2 0x318 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B926A56 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8B926A56 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x109 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x6A5EA38 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x414D91E8 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x125 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x289 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x76D JUMP JUMPDEST PUSH2 0x2E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12D PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x221 SWAP3 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x897 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x29A PUSH0 PUSH2 0x569 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x362 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x897 JUMP JUMPDEST POP PUSH0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP3 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH32 0x11C42A99BCDDC27EEA781499D4D35F138C3B2FBD9DA68CDD570892A40838222B CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x452 SWAP3 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x466 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DF DUP2 PUSH2 0x569 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4EA PUSH2 0x62A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x508 PUSH2 0x2C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x567 JUMPI PUSH2 0x52B PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x673 PUSH2 0x66E PUSH2 0x669 DUP5 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x684 DUP3 PUSH2 0x659 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x695 DUP3 PUSH2 0x67A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A5 DUP2 PUSH2 0x68B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6BE PUSH0 DUP4 ADD DUP5 PUSH2 0x69C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6CE DUP3 PUSH2 0x67A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x6C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x707 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x717 DUP2 PUSH2 0x6FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x730 PUSH0 DUP4 ADD DUP5 PUSH2 0x70E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74C DUP2 PUSH2 0x73A JUMP JUMPDEST DUP2 EQ PUSH2 0x756 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x767 DUP2 PUSH2 0x743 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH2 0x781 PUSH2 0x736 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x78F DUP5 DUP3 DUP6 ADD PUSH2 0x759 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x6FD JUMP JUMPDEST DUP2 EQ PUSH2 0x7AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7BC DUP2 PUSH2 0x798 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D7 JUMPI PUSH2 0x7D6 PUSH2 0x736 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7E4 DUP5 DUP3 DUP6 ADD PUSH2 0x7AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7FB DUP2 PUSH2 0x743 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x736 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x823 DUP5 DUP3 DUP6 ADD PUSH2 0x7ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x835 DUP2 PUSH2 0x73A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x84E PUSH0 DUP4 ADD DUP6 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x85B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x82C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x876 DUP2 PUSH2 0x862 JUMP JUMPDEST DUP2 EQ PUSH2 0x880 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x891 DUP2 PUSH2 0x86D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8AC JUMPI PUSH2 0x8AB PUSH2 0x736 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8B9 DUP5 DUP3 DUP6 ADD PUSH2 0x883 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8D5 PUSH0 DUP4 ADD DUP7 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x8E2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x8EF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x82C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x92E DUP3 PUSH2 0x73A JUMP JUMPDEST SWAP2 POP PUSH2 0x939 DUP4 PUSH2 0x73A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x947 DUP2 PUSH2 0x73A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x95E JUMPI PUSH2 0x95D PUSH2 0x8F7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xA9 0x2E JUMP DUP7 0x1F SELFBALANCE 0xD4 0xB5 COINBASE 0xB4 PUSH17 0x4B24C25515B669F947F2B6E44057A5E16C 0xA6 DUP6 PUSH8 0x64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "287:752:3:-:0;;;446:177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;511:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;548:5:3::1;534:4;;:20;;;;;;;;;;;;;;;;;;585:4;565:3;;:25;;;;;;;;;;;;;;;;;;609:6;601:5;:14;;;;446:177:::0;;;287:752;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;287:752:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ARST_274": {
									"entryPoint": 612,
									"id": 274,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MPP_277": {
									"entryPoint": 668,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1250,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_237": {
									"entryPoint": 1578,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1385,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buy_353": {
									"entryPoint": 744,
									"id": 353,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@extracARST_373": {
									"entryPoint": 293,
									"id": 373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 705,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 649,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1118,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_MintableERC20_$269_to_t_address_fromStack": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2242,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_MintableERC20_$269__to_t_address__fromStack_reversed": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 1675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_MintableERC20_$269_to_t_address": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2295,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6461:4",
										"nodeType": "YulBlock",
										"src": "0:6461:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:4",
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nativeSrc": "62:65:4",
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:4",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nativeSrc": "73:54:4",
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nativeSrc": "171:28:4",
													"nodeType": "YulBlock",
													"src": "171:28:4",
													"statements": [
														{
															"nativeSrc": "181:12:4",
															"nodeType": "YulAssignment",
															"src": "181:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:4",
																"nodeType": "YulIdentifier",
																"src": "188:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:4",
														"nodeType": "YulTypedName",
														"src": "157:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:4",
														"nodeType": "YulTypedName",
														"src": "167:3:4",
														"type": ""
													}
												],
												"src": "139:60:4"
											},
											{
												"body": {
													"nativeSrc": "265:82:4",
													"nodeType": "YulBlock",
													"src": "265:82:4",
													"statements": [
														{
															"nativeSrc": "275:66:4",
															"nodeType": "YulAssignment",
															"src": "275:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:4"
																				},
																				"nativeSrc": "315:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:4"
																		},
																		"nativeSrc": "306:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:4"
																},
																"nativeSrc": "288:53:4",
																"nodeType": "YulFunctionCall",
																"src": "288:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:4",
														"nodeType": "YulTypedName",
														"src": "245:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:4",
														"nodeType": "YulTypedName",
														"src": "255:9:4",
														"type": ""
													}
												],
												"src": "205:142:4"
											},
											{
												"body": {
													"nativeSrc": "413:66:4",
													"nodeType": "YulBlock",
													"src": "413:66:4",
													"statements": [
														{
															"nativeSrc": "423:50:4",
															"nodeType": "YulAssignment",
															"src": "423:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:4"
																},
																"nativeSrc": "436:37:4",
																"nodeType": "YulFunctionCall",
																"src": "436:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:4",
														"nodeType": "YulTypedName",
														"src": "393:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:4",
														"nodeType": "YulTypedName",
														"src": "403:9:4",
														"type": ""
													}
												],
												"src": "353:126:4"
											},
											{
												"body": {
													"nativeSrc": "559:66:4",
													"nodeType": "YulBlock",
													"src": "559:66:4",
													"statements": [
														{
															"nativeSrc": "569:50:4",
															"nodeType": "YulAssignment",
															"src": "569:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:4"
																},
																"nativeSrc": "582:37:4",
																"nodeType": "YulFunctionCall",
																"src": "582:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "485:140:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:4",
														"nodeType": "YulTypedName",
														"src": "539:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:4",
														"nodeType": "YulTypedName",
														"src": "549:9:4",
														"type": ""
													}
												],
												"src": "485:140:4"
											},
											{
												"body": {
													"nativeSrc": "710:80:4",
													"nodeType": "YulBlock",
													"src": "710:80:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "732:44:4",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:4"
																		},
																		"nativeSrc": "732:51:4",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:4"
																},
																"nativeSrc": "720:64:4",
																"nodeType": "YulFunctionCall",
																"src": "720:64:4"
															},
															"nativeSrc": "720:64:4",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "631:159:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:4",
														"nodeType": "YulTypedName",
														"src": "698:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:4",
														"nodeType": "YulTypedName",
														"src": "705:3:4",
														"type": ""
													}
												],
												"src": "631:159:4"
											},
											{
												"body": {
													"nativeSrc": "908:138:4",
													"nodeType": "YulBlock",
													"src": "908:138:4",
													"statements": [
														{
															"nativeSrc": "918:26:4",
															"nodeType": "YulAssignment",
															"src": "918:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:4",
																		"nodeType": "YulLiteral",
																		"src": "941:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:4"
																},
																"nativeSrc": "926:18:4",
																"nodeType": "YulFunctionCall",
																"src": "926:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:4"
																		},
																		"nativeSrc": "1021:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "954:57:4",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:4"
																},
																"nativeSrc": "954:85:4",
																"nodeType": "YulFunctionCall",
																"src": "954:85:4"
															},
															"nativeSrc": "954:85:4",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:4",
														"nodeType": "YulTypedName",
														"src": "880:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:4",
														"nodeType": "YulTypedName",
														"src": "892:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:4",
														"nodeType": "YulTypedName",
														"src": "903:4:4",
														"type": ""
													}
												],
												"src": "796:250:4"
											},
											{
												"body": {
													"nativeSrc": "1133:66:4",
													"nodeType": "YulBlock",
													"src": "1133:66:4",
													"statements": [
														{
															"nativeSrc": "1143:50:4",
															"nodeType": "YulAssignment",
															"src": "1143:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1156:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "1156:30:4"
																},
																"nativeSrc": "1156:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1156:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1143:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1143:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_MintableERC20_$269_to_t_address",
												"nativeSrc": "1052:147:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1113:5:4",
														"nodeType": "YulTypedName",
														"src": "1113:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1123:9:4",
														"nodeType": "YulTypedName",
														"src": "1123:9:4",
														"type": ""
													}
												],
												"src": "1052:147:4"
											},
											{
												"body": {
													"nativeSrc": "1291:87:4",
													"nodeType": "YulBlock",
													"src": "1291:87:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1308:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1308:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1365:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1365:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_MintableERC20_$269_to_t_address",
																			"nativeSrc": "1313:51:4",
																			"nodeType": "YulIdentifier",
																			"src": "1313:51:4"
																		},
																		"nativeSrc": "1313:58:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1313:58:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1301:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1301:6:4"
																},
																"nativeSrc": "1301:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1301:71:4"
															},
															"nativeSrc": "1301:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1301:71:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_MintableERC20_$269_to_t_address_fromStack",
												"nativeSrc": "1205:173:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1279:5:4",
														"nodeType": "YulTypedName",
														"src": "1279:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1286:3:4",
														"nodeType": "YulTypedName",
														"src": "1286:3:4",
														"type": ""
													}
												],
												"src": "1205:173:4"
											},
											{
												"body": {
													"nativeSrc": "1503:145:4",
													"nodeType": "YulBlock",
													"src": "1503:145:4",
													"statements": [
														{
															"nativeSrc": "1513:26:4",
															"nodeType": "YulAssignment",
															"src": "1513:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1525:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1525:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1536:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1536:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1521:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1521:3:4"
																},
																"nativeSrc": "1521:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1521:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1513:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1513:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1614:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1614:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1627:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1627:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1638:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1638:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1623:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1623:3:4"
																		},
																		"nativeSrc": "1623:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1623:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_MintableERC20_$269_to_t_address_fromStack",
																	"nativeSrc": "1549:64:4",
																	"nodeType": "YulIdentifier",
																	"src": "1549:64:4"
																},
																"nativeSrc": "1549:92:4",
																"nodeType": "YulFunctionCall",
																"src": "1549:92:4"
															},
															"nativeSrc": "1549:92:4",
															"nodeType": "YulExpressionStatement",
															"src": "1549:92:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_MintableERC20_$269__to_t_address__fromStack_reversed",
												"nativeSrc": "1384:264:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1475:9:4",
														"nodeType": "YulTypedName",
														"src": "1475:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1487:6:4",
														"nodeType": "YulTypedName",
														"src": "1487:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1498:4:4",
														"nodeType": "YulTypedName",
														"src": "1498:4:4",
														"type": ""
													}
												],
												"src": "1384:264:4"
											},
											{
												"body": {
													"nativeSrc": "1699:51:4",
													"nodeType": "YulBlock",
													"src": "1699:51:4",
													"statements": [
														{
															"nativeSrc": "1709:35:4",
															"nodeType": "YulAssignment",
															"src": "1709:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1738:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1720:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1720:17:4"
																},
																"nativeSrc": "1720:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1720:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1709:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1709:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1654:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1681:5:4",
														"nodeType": "YulTypedName",
														"src": "1681:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1691:7:4",
														"nodeType": "YulTypedName",
														"src": "1691:7:4",
														"type": ""
													}
												],
												"src": "1654:96:4"
											},
											{
												"body": {
													"nativeSrc": "1821:53:4",
													"nodeType": "YulBlock",
													"src": "1821:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1838:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1838:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1861:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1861:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1843:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1843:17:4"
																		},
																		"nativeSrc": "1843:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1843:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1831:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1831:6:4"
																},
																"nativeSrc": "1831:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1831:37:4"
															},
															"nativeSrc": "1831:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1831:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1756:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1809:5:4",
														"nodeType": "YulTypedName",
														"src": "1809:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1816:3:4",
														"nodeType": "YulTypedName",
														"src": "1816:3:4",
														"type": ""
													}
												],
												"src": "1756:118:4"
											},
											{
												"body": {
													"nativeSrc": "1978:124:4",
													"nodeType": "YulBlock",
													"src": "1978:124:4",
													"statements": [
														{
															"nativeSrc": "1988:26:4",
															"nodeType": "YulAssignment",
															"src": "1988:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2000:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2000:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2011:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2011:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1996:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:4"
																},
																"nativeSrc": "1996:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1996:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1988:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1988:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2068:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2068:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2081:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2081:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2092:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2092:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2077:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2077:3:4"
																		},
																		"nativeSrc": "2077:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2077:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2024:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2024:43:4"
																},
																"nativeSrc": "2024:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2024:71:4"
															},
															"nativeSrc": "2024:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2024:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1880:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1950:9:4",
														"nodeType": "YulTypedName",
														"src": "1950:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1962:6:4",
														"nodeType": "YulTypedName",
														"src": "1962:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1973:4:4",
														"nodeType": "YulTypedName",
														"src": "1973:4:4",
														"type": ""
													}
												],
												"src": "1880:222:4"
											},
											{
												"body": {
													"nativeSrc": "2148:35:4",
													"nodeType": "YulBlock",
													"src": "2148:35:4",
													"statements": [
														{
															"nativeSrc": "2158:19:4",
															"nodeType": "YulAssignment",
															"src": "2158:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2174:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2174:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2168:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2168:5:4"
																},
																"nativeSrc": "2168:9:4",
																"nodeType": "YulFunctionCall",
																"src": "2168:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2158:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "2108:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2141:6:4",
														"nodeType": "YulTypedName",
														"src": "2141:6:4",
														"type": ""
													}
												],
												"src": "2108:75:4"
											},
											{
												"body": {
													"nativeSrc": "2278:28:4",
													"nodeType": "YulBlock",
													"src": "2278:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2295:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2295:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2298:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2298:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2288:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2288:6:4"
																},
																"nativeSrc": "2288:12:4",
																"nodeType": "YulFunctionCall",
																"src": "2288:12:4"
															},
															"nativeSrc": "2288:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "2288:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2189:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2189:117:4"
											},
											{
												"body": {
													"nativeSrc": "2401:28:4",
													"nodeType": "YulBlock",
													"src": "2401:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2418:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2418:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2421:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2421:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2411:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2411:6:4"
																},
																"nativeSrc": "2411:12:4",
																"nodeType": "YulFunctionCall",
																"src": "2411:12:4"
															},
															"nativeSrc": "2411:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "2411:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2312:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2312:117:4"
											},
											{
												"body": {
													"nativeSrc": "2480:32:4",
													"nodeType": "YulBlock",
													"src": "2480:32:4",
													"statements": [
														{
															"nativeSrc": "2490:16:4",
															"nodeType": "YulAssignment",
															"src": "2490:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "2501:5:4",
																"nodeType": "YulIdentifier",
																"src": "2501:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2490:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2490:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2435:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2462:5:4",
														"nodeType": "YulTypedName",
														"src": "2462:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2472:7:4",
														"nodeType": "YulTypedName",
														"src": "2472:7:4",
														"type": ""
													}
												],
												"src": "2435:77:4"
											},
											{
												"body": {
													"nativeSrc": "2561:79:4",
													"nodeType": "YulBlock",
													"src": "2561:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2618:16:4",
																"nodeType": "YulBlock",
																"src": "2618:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2627:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2627:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2630:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2630:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2620:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2620:6:4"
																			},
																			"nativeSrc": "2620:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:12:4"
																		},
																		"nativeSrc": "2620:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2620:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2584:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2584:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2609:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2609:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2591:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2591:17:4"
																				},
																				"nativeSrc": "2591:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2591:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2581:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2581:2:4"
																		},
																		"nativeSrc": "2581:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2581:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2574:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2574:6:4"
																},
																"nativeSrc": "2574:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2574:43:4"
															},
															"nativeSrc": "2571:63:4",
															"nodeType": "YulIf",
															"src": "2571:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2518:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2554:5:4",
														"nodeType": "YulTypedName",
														"src": "2554:5:4",
														"type": ""
													}
												],
												"src": "2518:122:4"
											},
											{
												"body": {
													"nativeSrc": "2698:87:4",
													"nodeType": "YulBlock",
													"src": "2698:87:4",
													"statements": [
														{
															"nativeSrc": "2708:29:4",
															"nodeType": "YulAssignment",
															"src": "2708:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2730:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2730:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2717:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2717:12:4"
																},
																"nativeSrc": "2717:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2717:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2708:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2708:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2773:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2773:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2746:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "2746:26:4"
																},
																"nativeSrc": "2746:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2746:33:4"
															},
															"nativeSrc": "2746:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "2746:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2646:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2676:6:4",
														"nodeType": "YulTypedName",
														"src": "2676:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2684:3:4",
														"nodeType": "YulTypedName",
														"src": "2684:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2692:5:4",
														"nodeType": "YulTypedName",
														"src": "2692:5:4",
														"type": ""
													}
												],
												"src": "2646:139:4"
											},
											{
												"body": {
													"nativeSrc": "2857:263:4",
													"nodeType": "YulBlock",
													"src": "2857:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2903:83:4",
																"nodeType": "YulBlock",
																"src": "2903:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2905:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2905:77:4"
																			},
																			"nativeSrc": "2905:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2905:79:4"
																		},
																		"nativeSrc": "2905:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2905:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2878:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2878:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2887:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2887:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2874:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:4"
																		},
																		"nativeSrc": "2874:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2874:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2899:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2899:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2870:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:4"
																},
																"nativeSrc": "2870:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2870:32:4"
															},
															"nativeSrc": "2867:119:4",
															"nodeType": "YulIf",
															"src": "2867:119:4"
														},
														{
															"nativeSrc": "2996:117:4",
															"nodeType": "YulBlock",
															"src": "2996:117:4",
															"statements": [
																{
																	"nativeSrc": "3011:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3011:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3025:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3025:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3015:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3015:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3040:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3040:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3075:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3075:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3086:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3086:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3071:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3071:3:4"
																				},
																				"nativeSrc": "3071:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3071:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3095:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3095:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3050:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3050:20:4"
																		},
																		"nativeSrc": "3050:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3040:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3040:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2791:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2827:9:4",
														"nodeType": "YulTypedName",
														"src": "2827:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2838:7:4",
														"nodeType": "YulTypedName",
														"src": "2838:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2850:6:4",
														"nodeType": "YulTypedName",
														"src": "2850:6:4",
														"type": ""
													}
												],
												"src": "2791:329:4"
											},
											{
												"body": {
													"nativeSrc": "3169:79:4",
													"nodeType": "YulBlock",
													"src": "3169:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3226:16:4",
																"nodeType": "YulBlock",
																"src": "3226:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3235:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3235:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3238:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3238:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3228:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3228:6:4"
																			},
																			"nativeSrc": "3228:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3228:12:4"
																		},
																		"nativeSrc": "3228:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3228:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3192:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3192:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3217:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3217:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3199:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "3199:17:4"
																				},
																				"nativeSrc": "3199:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3199:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3189:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3189:2:4"
																		},
																		"nativeSrc": "3189:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3182:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:4"
																},
																"nativeSrc": "3182:43:4",
																"nodeType": "YulFunctionCall",
																"src": "3182:43:4"
															},
															"nativeSrc": "3179:63:4",
															"nodeType": "YulIf",
															"src": "3179:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3126:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:4",
														"nodeType": "YulTypedName",
														"src": "3162:5:4",
														"type": ""
													}
												],
												"src": "3126:122:4"
											},
											{
												"body": {
													"nativeSrc": "3306:87:4",
													"nodeType": "YulBlock",
													"src": "3306:87:4",
													"statements": [
														{
															"nativeSrc": "3316:29:4",
															"nodeType": "YulAssignment",
															"src": "3316:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3338:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3338:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3325:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3325:12:4"
																},
																"nativeSrc": "3325:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3325:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3316:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3316:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3381:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3381:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3354:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "3354:26:4"
																},
																"nativeSrc": "3354:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3354:33:4"
															},
															"nativeSrc": "3354:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3354:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3254:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3284:6:4",
														"nodeType": "YulTypedName",
														"src": "3284:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3292:3:4",
														"nodeType": "YulTypedName",
														"src": "3292:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3300:5:4",
														"nodeType": "YulTypedName",
														"src": "3300:5:4",
														"type": ""
													}
												],
												"src": "3254:139:4"
											},
											{
												"body": {
													"nativeSrc": "3465:263:4",
													"nodeType": "YulBlock",
													"src": "3465:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3511:83:4",
																"nodeType": "YulBlock",
																"src": "3511:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3513:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3513:77:4"
																			},
																			"nativeSrc": "3513:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3513:79:4"
																		},
																		"nativeSrc": "3513:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3513:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3486:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3486:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3495:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3495:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3482:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3482:3:4"
																		},
																		"nativeSrc": "3482:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3482:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3507:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3507:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3478:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3478:3:4"
																},
																"nativeSrc": "3478:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3478:32:4"
															},
															"nativeSrc": "3475:119:4",
															"nodeType": "YulIf",
															"src": "3475:119:4"
														},
														{
															"nativeSrc": "3604:117:4",
															"nodeType": "YulBlock",
															"src": "3604:117:4",
															"statements": [
																{
																	"nativeSrc": "3619:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3619:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3633:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3633:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3623:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3623:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3648:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3648:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3683:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3683:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3694:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3694:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3679:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3679:3:4"
																				},
																				"nativeSrc": "3679:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3679:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3703:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3703:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3658:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3658:20:4"
																		},
																		"nativeSrc": "3658:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3658:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3648:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3648:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3399:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3435:9:4",
														"nodeType": "YulTypedName",
														"src": "3435:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3446:7:4",
														"nodeType": "YulTypedName",
														"src": "3446:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3458:6:4",
														"nodeType": "YulTypedName",
														"src": "3458:6:4",
														"type": ""
													}
												],
												"src": "3399:329:4"
											},
											{
												"body": {
													"nativeSrc": "3797:80:4",
													"nodeType": "YulBlock",
													"src": "3797:80:4",
													"statements": [
														{
															"nativeSrc": "3807:22:4",
															"nodeType": "YulAssignment",
															"src": "3807:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3822:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3822:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3816:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3816:5:4"
																},
																"nativeSrc": "3816:13:4",
																"nodeType": "YulFunctionCall",
																"src": "3816:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3807:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3807:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3865:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3865:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3838:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "3838:26:4"
																},
																"nativeSrc": "3838:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3838:33:4"
															},
															"nativeSrc": "3838:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3838:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3734:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3775:6:4",
														"nodeType": "YulTypedName",
														"src": "3775:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3783:3:4",
														"nodeType": "YulTypedName",
														"src": "3783:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3791:5:4",
														"nodeType": "YulTypedName",
														"src": "3791:5:4",
														"type": ""
													}
												],
												"src": "3734:143:4"
											},
											{
												"body": {
													"nativeSrc": "3960:274:4",
													"nodeType": "YulBlock",
													"src": "3960:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4006:83:4",
																"nodeType": "YulBlock",
																"src": "4006:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4008:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "4008:77:4"
																			},
																			"nativeSrc": "4008:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4008:79:4"
																		},
																		"nativeSrc": "4008:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4008:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3981:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3981:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3990:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3990:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3977:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3977:3:4"
																		},
																		"nativeSrc": "3977:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3977:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4002:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4002:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3973:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3973:3:4"
																},
																"nativeSrc": "3973:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3973:32:4"
															},
															"nativeSrc": "3970:119:4",
															"nodeType": "YulIf",
															"src": "3970:119:4"
														},
														{
															"nativeSrc": "4099:128:4",
															"nodeType": "YulBlock",
															"src": "4099:128:4",
															"statements": [
																{
																	"nativeSrc": "4114:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4114:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4128:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4128:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4118:6:4",
																			"nodeType": "YulTypedName",
																			"src": "4118:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4143:74:4",
																	"nodeType": "YulAssignment",
																	"src": "4143:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4189:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4189:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4200:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4200:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4185:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4185:3:4"
																				},
																				"nativeSrc": "4185:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4185:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4209:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4209:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4153:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "4153:31:4"
																		},
																		"nativeSrc": "4153:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4153:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4143:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4143:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3883:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3930:9:4",
														"nodeType": "YulTypedName",
														"src": "3930:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3941:7:4",
														"nodeType": "YulTypedName",
														"src": "3941:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3953:6:4",
														"nodeType": "YulTypedName",
														"src": "3953:6:4",
														"type": ""
													}
												],
												"src": "3883:351:4"
											},
											{
												"body": {
													"nativeSrc": "4305:53:4",
													"nodeType": "YulBlock",
													"src": "4305:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4322:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4322:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4345:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4345:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4327:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "4327:17:4"
																		},
																		"nativeSrc": "4327:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4327:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4315:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4315:6:4"
																},
																"nativeSrc": "4315:37:4",
																"nodeType": "YulFunctionCall",
																"src": "4315:37:4"
															},
															"nativeSrc": "4315:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "4315:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4240:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4293:5:4",
														"nodeType": "YulTypedName",
														"src": "4293:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4300:3:4",
														"nodeType": "YulTypedName",
														"src": "4300:3:4",
														"type": ""
													}
												],
												"src": "4240:118:4"
											},
											{
												"body": {
													"nativeSrc": "4490:206:4",
													"nodeType": "YulBlock",
													"src": "4490:206:4",
													"statements": [
														{
															"nativeSrc": "4500:26:4",
															"nodeType": "YulAssignment",
															"src": "4500:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4512:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4512:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4523:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4523:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4508:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:4"
																},
																"nativeSrc": "4508:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4500:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4500:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4580:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4580:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4593:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4593:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4604:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4604:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4589:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4589:3:4"
																		},
																		"nativeSrc": "4589:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4589:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4536:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4536:43:4"
																},
																"nativeSrc": "4536:71:4",
																"nodeType": "YulFunctionCall",
																"src": "4536:71:4"
															},
															"nativeSrc": "4536:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "4536:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4661:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4661:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4674:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4685:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4670:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:4"
																		},
																		"nativeSrc": "4670:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4617:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4617:43:4"
																},
																"nativeSrc": "4617:72:4",
																"nodeType": "YulFunctionCall",
																"src": "4617:72:4"
															},
															"nativeSrc": "4617:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "4617:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4364:332:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4454:9:4",
														"nodeType": "YulTypedName",
														"src": "4454:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4466:6:4",
														"nodeType": "YulTypedName",
														"src": "4466:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4474:6:4",
														"nodeType": "YulTypedName",
														"src": "4474:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4485:4:4",
														"nodeType": "YulTypedName",
														"src": "4485:4:4",
														"type": ""
													}
												],
												"src": "4364:332:4"
											},
											{
												"body": {
													"nativeSrc": "4744:48:4",
													"nodeType": "YulBlock",
													"src": "4744:48:4",
													"statements": [
														{
															"nativeSrc": "4754:32:4",
															"nodeType": "YulAssignment",
															"src": "4754:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4779:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4779:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4772:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4772:6:4"
																		},
																		"nativeSrc": "4772:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4765:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4765:6:4"
																},
																"nativeSrc": "4765:21:4",
																"nodeType": "YulFunctionCall",
																"src": "4765:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4754:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4754:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4702:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4726:5:4",
														"nodeType": "YulTypedName",
														"src": "4726:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4736:7:4",
														"nodeType": "YulTypedName",
														"src": "4736:7:4",
														"type": ""
													}
												],
												"src": "4702:90:4"
											},
											{
												"body": {
													"nativeSrc": "4838:76:4",
													"nodeType": "YulBlock",
													"src": "4838:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4892:16:4",
																"nodeType": "YulBlock",
																"src": "4892:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4901:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4901:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4904:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4904:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4894:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4894:6:4"
																			},
																			"nativeSrc": "4894:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4894:12:4"
																		},
																		"nativeSrc": "4894:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4894:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4861:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4861:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4883:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4883:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4868:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "4868:14:4"
																				},
																				"nativeSrc": "4868:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4868:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4858:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4858:2:4"
																		},
																		"nativeSrc": "4858:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4858:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4851:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4851:6:4"
																},
																"nativeSrc": "4851:40:4",
																"nodeType": "YulFunctionCall",
																"src": "4851:40:4"
															},
															"nativeSrc": "4848:60:4",
															"nodeType": "YulIf",
															"src": "4848:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4798:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:4",
														"nodeType": "YulTypedName",
														"src": "4831:5:4",
														"type": ""
													}
												],
												"src": "4798:116:4"
											},
											{
												"body": {
													"nativeSrc": "4980:77:4",
													"nodeType": "YulBlock",
													"src": "4980:77:4",
													"statements": [
														{
															"nativeSrc": "4990:22:4",
															"nodeType": "YulAssignment",
															"src": "4990:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5005:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4999:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4999:5:4"
																},
																"nativeSrc": "4999:13:4",
																"nodeType": "YulFunctionCall",
																"src": "4999:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4990:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4990:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5045:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5045:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5021:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "5021:23:4"
																},
																"nativeSrc": "5021:30:4",
																"nodeType": "YulFunctionCall",
																"src": "5021:30:4"
															},
															"nativeSrc": "5021:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "5021:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4920:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4958:6:4",
														"nodeType": "YulTypedName",
														"src": "4958:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4966:3:4",
														"nodeType": "YulTypedName",
														"src": "4966:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4974:5:4",
														"nodeType": "YulTypedName",
														"src": "4974:5:4",
														"type": ""
													}
												],
												"src": "4920:137:4"
											},
											{
												"body": {
													"nativeSrc": "5137:271:4",
													"nodeType": "YulBlock",
													"src": "5137:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5183:83:4",
																"nodeType": "YulBlock",
																"src": "5183:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5185:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "5185:77:4"
																			},
																			"nativeSrc": "5185:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5185:79:4"
																		},
																		"nativeSrc": "5185:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5185:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5158:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5158:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5167:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5167:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5154:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5154:3:4"
																		},
																		"nativeSrc": "5154:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5154:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5179:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5179:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5150:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5150:3:4"
																},
																"nativeSrc": "5150:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5150:32:4"
															},
															"nativeSrc": "5147:119:4",
															"nodeType": "YulIf",
															"src": "5147:119:4"
														},
														{
															"nativeSrc": "5276:125:4",
															"nodeType": "YulBlock",
															"src": "5276:125:4",
															"statements": [
																{
																	"nativeSrc": "5291:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5291:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5305:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5305:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5295:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5295:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5320:71:4",
																	"nodeType": "YulAssignment",
																	"src": "5320:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5363:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5363:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5374:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5374:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5359:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5359:3:4"
																				},
																				"nativeSrc": "5359:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5359:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5383:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5383:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5330:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "5330:28:4"
																		},
																		"nativeSrc": "5330:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5330:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5320:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5320:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5063:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5107:9:4",
														"nodeType": "YulTypedName",
														"src": "5107:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5118:7:4",
														"nodeType": "YulTypedName",
														"src": "5118:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5130:6:4",
														"nodeType": "YulTypedName",
														"src": "5130:6:4",
														"type": ""
													}
												],
												"src": "5063:345:4"
											},
											{
												"body": {
													"nativeSrc": "5568:288:4",
													"nodeType": "YulBlock",
													"src": "5568:288:4",
													"statements": [
														{
															"nativeSrc": "5578:26:4",
															"nodeType": "YulAssignment",
															"src": "5578:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5590:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5590:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5601:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5601:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5586:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5586:3:4"
																},
																"nativeSrc": "5586:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5586:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5578:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5578:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5658:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5658:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5671:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5671:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5682:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5682:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5667:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5667:3:4"
																		},
																		"nativeSrc": "5667:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5667:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5614:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5614:43:4"
																},
																"nativeSrc": "5614:71:4",
																"nodeType": "YulFunctionCall",
																"src": "5614:71:4"
															},
															"nativeSrc": "5614:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "5614:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5739:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5739:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5752:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5752:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5763:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5763:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5748:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5748:3:4"
																		},
																		"nativeSrc": "5748:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5748:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5695:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5695:43:4"
																},
																"nativeSrc": "5695:72:4",
																"nodeType": "YulFunctionCall",
																"src": "5695:72:4"
															},
															"nativeSrc": "5695:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "5695:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5821:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5821:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5834:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5834:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5845:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5845:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5830:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5830:3:4"
																		},
																		"nativeSrc": "5830:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5777:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5777:43:4"
																},
																"nativeSrc": "5777:72:4",
																"nodeType": "YulFunctionCall",
																"src": "5777:72:4"
															},
															"nativeSrc": "5777:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "5777:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5414:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5524:9:4",
														"nodeType": "YulTypedName",
														"src": "5524:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5536:6:4",
														"nodeType": "YulTypedName",
														"src": "5536:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5544:6:4",
														"nodeType": "YulTypedName",
														"src": "5544:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5552:6:4",
														"nodeType": "YulTypedName",
														"src": "5552:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5563:4:4",
														"nodeType": "YulTypedName",
														"src": "5563:4:4",
														"type": ""
													}
												],
												"src": "5414:442:4"
											},
											{
												"body": {
													"nativeSrc": "5890:152:4",
													"nodeType": "YulBlock",
													"src": "5890:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5907:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5907:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5910:77:4",
																		"nodeType": "YulLiteral",
																		"src": "5910:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5900:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5900:6:4"
																},
																"nativeSrc": "5900:88:4",
																"nodeType": "YulFunctionCall",
																"src": "5900:88:4"
															},
															"nativeSrc": "5900:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "5900:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6004:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6004:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6007:4:4",
																		"nodeType": "YulLiteral",
																		"src": "6007:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5997:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5997:6:4"
																},
																"nativeSrc": "5997:15:4",
																"nodeType": "YulFunctionCall",
																"src": "5997:15:4"
															},
															"nativeSrc": "5997:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "5997:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6028:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6028:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6031:4:4",
																		"nodeType": "YulLiteral",
																		"src": "6031:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6021:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:4"
																},
																"nativeSrc": "6021:15:4",
																"nodeType": "YulFunctionCall",
																"src": "6021:15:4"
															},
															"nativeSrc": "6021:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "6021:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5862:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "5862:180:4"
											},
											{
												"body": {
													"nativeSrc": "6096:362:4",
													"nodeType": "YulBlock",
													"src": "6096:362:4",
													"statements": [
														{
															"nativeSrc": "6106:25:4",
															"nodeType": "YulAssignment",
															"src": "6106:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6129:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6129:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6111:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "6111:17:4"
																},
																"nativeSrc": "6111:20:4",
																"nodeType": "YulFunctionCall",
																"src": "6111:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6106:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "6106:1:4"
																}
															]
														},
														{
															"nativeSrc": "6140:25:4",
															"nodeType": "YulAssignment",
															"src": "6140:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6163:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6163:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6145:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "6145:17:4"
																},
																"nativeSrc": "6145:20:4",
																"nodeType": "YulFunctionCall",
																"src": "6145:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6140:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "6140:1:4"
																}
															]
														},
														{
															"nativeSrc": "6174:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6174:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6197:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6197:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6200:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "6200:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6193:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6193:3:4"
																},
																"nativeSrc": "6193:9:4",
																"nodeType": "YulFunctionCall",
																"src": "6193:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6178:11:4",
																	"nodeType": "YulTypedName",
																	"src": "6178:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6211:41:4",
															"nodeType": "YulAssignment",
															"src": "6211:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6240:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "6240:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6222:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "6222:17:4"
																},
																"nativeSrc": "6222:30:4",
																"nodeType": "YulFunctionCall",
																"src": "6222:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6211:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "6211:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6429:22:4",
																"nodeType": "YulBlock",
																"src": "6429:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6431:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "6431:16:4"
																			},
																			"nativeSrc": "6431:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6431:18:4"
																		},
																		"nativeSrc": "6431:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6431:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6362:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "6362:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6355:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "6355:6:4"
																				},
																				"nativeSrc": "6355:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6355:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6385:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "6385:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6392:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "6392:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6401:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "6401:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6388:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "6388:3:4"
																						},
																						"nativeSrc": "6388:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "6388:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6382:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "6382:2:4"
																				},
																				"nativeSrc": "6382:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6382:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6335:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "6335:2:4"
																		},
																		"nativeSrc": "6335:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6335:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6315:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:4"
																},
																"nativeSrc": "6315:113:4",
																"nodeType": "YulFunctionCall",
																"src": "6315:113:4"
															},
															"nativeSrc": "6312:139:4",
															"nodeType": "YulIf",
															"src": "6312:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6048:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6079:1:4",
														"nodeType": "YulTypedName",
														"src": "6079:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6082:1:4",
														"nodeType": "YulTypedName",
														"src": "6082:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6088:7:4",
														"nodeType": "YulTypedName",
														"src": "6088:7:4",
														"type": ""
													}
												],
												"src": "6048:410:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_MintableERC20_$269_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_MintableERC20_$269_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MintableERC20_$269_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_MintableERC20_$269__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MintableERC20_$269_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c80638b926a56116100595780638b926a56146100b15780638da5cb5b146100cf578063d96a094a146100ed578063f2fde38b146101095761007b565b806306a5ea381461007f578063414d91e814610089578063715018a6146100a7575b5f80fd5b610087610125565b005b610091610264565b60405161009e91906106ab565b60405180910390f35b6100af610289565b005b6100b961029c565b6040516100c691906106e4565b60405180910390f35b6100d76102c1565b6040516100e4919061071d565b60405180910390f35b6101076004803603810190610102919061076d565b6102e8565b005b610123600480360381019061011e91906107c2565b61045e565b005b61012d6104e2565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb3360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101c5919061071d565b602060405180830381865afa1580156101e0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102049190610801565b6040518363ffffffff1660e01b815260040161022192919061083b565b6020604051808303815f875af115801561023d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102619190610897565b50565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102916104e2565b61029a5f610569565b565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610346939291906108c2565b6020604051808303815f875af1158015610362573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103869190610897565b505f600354826103969190610924565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016103f492919061083b565b5f604051808303815f87803b15801561040b575f80fd5b505af115801561041d573d5f803e3d5ffd5b505050507f11c42a99bcddc27eea781499d4d35f138c3b2fbd9da68cdd570892a40838222b338260405161045292919061083b565b60405180910390a15050565b6104666104e2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104d6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104cd919061071d565b60405180910390fd5b6104df81610569565b50565b6104ea61062a565b73ffffffffffffffffffffffffffffffffffffffff166105086102c1565b73ffffffffffffffffffffffffffffffffffffffff16146105675761052b61062a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161055e919061071d565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61067361066e61066984610631565b610650565b610631565b9050919050565b5f61068482610659565b9050919050565b5f6106958261067a565b9050919050565b6106a58161068b565b82525050565b5f6020820190506106be5f83018461069c565b92915050565b5f6106ce8261067a565b9050919050565b6106de816106c4565b82525050565b5f6020820190506106f75f8301846106d5565b92915050565b5f61070782610631565b9050919050565b610717816106fd565b82525050565b5f6020820190506107305f83018461070e565b92915050565b5f80fd5b5f819050919050565b61074c8161073a565b8114610756575f80fd5b50565b5f8135905061076781610743565b92915050565b5f6020828403121561078257610781610736565b5b5f61078f84828501610759565b91505092915050565b6107a1816106fd565b81146107ab575f80fd5b50565b5f813590506107bc81610798565b92915050565b5f602082840312156107d7576107d6610736565b5b5f6107e4848285016107ae565b91505092915050565b5f815190506107fb81610743565b92915050565b5f6020828403121561081657610815610736565b5b5f610823848285016107ed565b91505092915050565b6108358161073a565b82525050565b5f60408201905061084e5f83018561070e565b61085b602083018461082c565b9392505050565b5f8115159050919050565b61087681610862565b8114610880575f80fd5b50565b5f815190506108918161086d565b92915050565b5f602082840312156108ac576108ab610736565b5b5f6108b984828501610883565b91505092915050565b5f6060820190506108d55f83018661070e565b6108e2602083018561070e565b6108ef604083018461082c565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61092e8261073a565b91506109398361073a565b92508282026109478161073a565b9150828204841483151761095e5761095d6108f7565b5b509291505056fea2646970667358221220d8a92e56861f47d4b541b4704b24c25515b669f947f2b6e44057a5e16ca6856764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B926A56 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8B926A56 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0xED JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x109 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x6A5EA38 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x414D91E8 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x125 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH2 0x264 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x289 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x2C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x76D JUMP JUMPDEST PUSH2 0x2E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12D PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x221 SWAP3 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x897 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x291 PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x29A PUSH0 PUSH2 0x569 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x346 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x362 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x897 JUMP JUMPDEST POP PUSH0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F4 SWAP3 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH32 0x11C42A99BCDDC27EEA781499D4D35F138C3B2FBD9DA68CDD570892A40838222B CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x452 SWAP3 SWAP2 SWAP1 PUSH2 0x83B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x466 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DF DUP2 PUSH2 0x569 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x4EA PUSH2 0x62A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x508 PUSH2 0x2C1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x567 JUMPI PUSH2 0x52B PUSH2 0x62A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x673 PUSH2 0x66E PUSH2 0x669 DUP5 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x650 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x684 DUP3 PUSH2 0x659 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x695 DUP3 PUSH2 0x67A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A5 DUP2 PUSH2 0x68B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6BE PUSH0 DUP4 ADD DUP5 PUSH2 0x69C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6CE DUP3 PUSH2 0x67A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP2 PUSH2 0x6C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x707 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x717 DUP2 PUSH2 0x6FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x730 PUSH0 DUP4 ADD DUP5 PUSH2 0x70E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74C DUP2 PUSH2 0x73A JUMP JUMPDEST DUP2 EQ PUSH2 0x756 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x767 DUP2 PUSH2 0x743 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH2 0x781 PUSH2 0x736 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x78F DUP5 DUP3 DUP6 ADD PUSH2 0x759 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7A1 DUP2 PUSH2 0x6FD JUMP JUMPDEST DUP2 EQ PUSH2 0x7AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7BC DUP2 PUSH2 0x798 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D7 JUMPI PUSH2 0x7D6 PUSH2 0x736 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7E4 DUP5 DUP3 DUP6 ADD PUSH2 0x7AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x7FB DUP2 PUSH2 0x743 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x816 JUMPI PUSH2 0x815 PUSH2 0x736 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x823 DUP5 DUP3 DUP6 ADD PUSH2 0x7ED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x835 DUP2 PUSH2 0x73A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x84E PUSH0 DUP4 ADD DUP6 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x85B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x82C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x876 DUP2 PUSH2 0x862 JUMP JUMPDEST DUP2 EQ PUSH2 0x880 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x891 DUP2 PUSH2 0x86D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8AC JUMPI PUSH2 0x8AB PUSH2 0x736 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8B9 DUP5 DUP3 DUP6 ADD PUSH2 0x883 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8D5 PUSH0 DUP4 ADD DUP7 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x8E2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x70E JUMP JUMPDEST PUSH2 0x8EF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x82C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x92E DUP3 PUSH2 0x73A JUMP JUMPDEST SWAP2 POP PUSH2 0x939 DUP4 PUSH2 0x73A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x947 DUP2 PUSH2 0x73A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x95E JUMPI PUSH2 0x95D PUSH2 0x8F7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xA9 0x2E JUMP DUP7 0x1F SELFBALANCE 0xD4 0xB5 COINBASE 0xB4 PUSH17 0x4B24C25515B669F947F2B6E44057A5E16C 0xA6 DUP6 PUSH8 0x64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "287:752:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;920:114;;;:::i;:::-;;325:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;350:24:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;631:281:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;920:114:3;1531:13:0;:11;:13::i;:::-;971:4:3::1;;;;;;;;;;;:13;;;985:10;996:4;;;;;;;;;;;:14;;;1019:4;996:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;971:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;920:114::o:0;325:18::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;350:24:3:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;631:281:3:-;702:4;;;;;;;;;;;:17;;;721:10;742:4;754:11;702:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;778:18;813:5;;799:11;:19;;;;:::i;:::-;778:40;;829:3;;;;;;;;;;;:8;;;838:10;850;829:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:27;881:10;893;877:27;;;;;;;:::i;:::-;;;;;;;;673:239;631:281;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1052:147::-;1123:9;1156:37;1187:5;1156:37;:::i;:::-;1143:50;;1052:147;;;:::o;1205:173::-;1313:58;1365:5;1313:58;:::i;:::-;1308:3;1301:71;1205:173;;:::o;1384:264::-;1498:4;1536:2;1525:9;1521:18;1513:26;;1549:92;1638:1;1627:9;1623:17;1614:6;1549:92;:::i;:::-;1384:264;;;;:::o;1654:96::-;1691:7;1720:24;1738:5;1720:24;:::i;:::-;1709:35;;1654:96;;;:::o;1756:118::-;1843:24;1861:5;1843:24;:::i;:::-;1838:3;1831:37;1756:118;;:::o;1880:222::-;1973:4;2011:2;2000:9;1996:18;1988:26;;2024:71;2092:1;2081:9;2077:17;2068:6;2024:71;:::i;:::-;1880:222;;;;:::o;2189:117::-;2298:1;2295;2288:12;2435:77;2472:7;2501:5;2490:16;;2435:77;;;:::o;2518:122::-;2591:24;2609:5;2591:24;:::i;:::-;2584:5;2581:35;2571:63;;2630:1;2627;2620:12;2571:63;2518:122;:::o;2646:139::-;2692:5;2730:6;2717:20;2708:29;;2746:33;2773:5;2746:33;:::i;:::-;2646:139;;;;:::o;2791:329::-;2850:6;2899:2;2887:9;2878:7;2874:23;2870:32;2867:119;;;2905:79;;:::i;:::-;2867:119;3025:1;3050:53;3095:7;3086:6;3075:9;3071:22;3050:53;:::i;:::-;3040:63;;2996:117;2791:329;;;;:::o;3126:122::-;3199:24;3217:5;3199:24;:::i;:::-;3192:5;3189:35;3179:63;;3238:1;3235;3228:12;3179:63;3126:122;:::o;3254:139::-;3300:5;3338:6;3325:20;3316:29;;3354:33;3381:5;3354:33;:::i;:::-;3254:139;;;;:::o;3399:329::-;3458:6;3507:2;3495:9;3486:7;3482:23;3478:32;3475:119;;;3513:79;;:::i;:::-;3475:119;3633:1;3658:53;3703:7;3694:6;3683:9;3679:22;3658:53;:::i;:::-;3648:63;;3604:117;3399:329;;;;:::o;3734:143::-;3791:5;3822:6;3816:13;3807:22;;3838:33;3865:5;3838:33;:::i;:::-;3734:143;;;;:::o;3883:351::-;3953:6;4002:2;3990:9;3981:7;3977:23;3973:32;3970:119;;;4008:79;;:::i;:::-;3970:119;4128:1;4153:64;4209:7;4200:6;4189:9;4185:22;4153:64;:::i;:::-;4143:74;;4099:128;3883:351;;;;:::o;4240:118::-;4327:24;4345:5;4327:24;:::i;:::-;4322:3;4315:37;4240:118;;:::o;4364:332::-;4485:4;4523:2;4512:9;4508:18;4500:26;;4536:71;4604:1;4593:9;4589:17;4580:6;4536:71;:::i;:::-;4617:72;4685:2;4674:9;4670:18;4661:6;4617:72;:::i;:::-;4364:332;;;;;:::o;4702:90::-;4736:7;4779:5;4772:13;4765:21;4754:32;;4702:90;;;:::o;4798:116::-;4868:21;4883:5;4868:21;:::i;:::-;4861:5;4858:32;4848:60;;4904:1;4901;4894:12;4848:60;4798:116;:::o;4920:137::-;4974:5;5005:6;4999:13;4990:22;;5021:30;5045:5;5021:30;:::i;:::-;4920:137;;;;:::o;5063:345::-;5130:6;5179:2;5167:9;5158:7;5154:23;5150:32;5147:119;;;5185:79;;:::i;:::-;5147:119;5305:1;5330:61;5383:7;5374:6;5363:9;5359:22;5330:61;:::i;:::-;5320:71;;5276:125;5063:345;;;;:::o;5414:442::-;5563:4;5601:2;5590:9;5586:18;5578:26;;5614:71;5682:1;5671:9;5667:17;5658:6;5614:71;:::i;:::-;5695:72;5763:2;5752:9;5748:18;5739:6;5695:72;:::i;:::-;5777;5845:2;5834:9;5830:18;5821:6;5777:72;:::i;:::-;5414:442;;;;;;:::o;5862:180::-;5910:77;5907:1;5900:88;6007:4;6004:1;5997:15;6031:4;6028:1;6021:15;6048:410;6088:7;6111:20;6129:1;6111:20;:::i;:::-;6106:25;;6145:20;6163:1;6145:20;:::i;:::-;6140:25;;6200:1;6197;6193:9;6222:30;6240:11;6222:30;:::i;:::-;6211:41;;6401:1;6392:7;6388:15;6385:1;6382:22;6362:1;6355:9;6335:83;6312:139;;6431:18;;:::i;:::-;6312:139;6096:362;6048:410;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "491800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ARST()": "infinite",
								"MPP()": "infinite",
								"buy(uint256)": "infinite",
								"extracARST()": "infinite",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 287,
									"end": 1039,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 446,
									"end": 623,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 623,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 446,
									"end": 623,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 446,
									"end": 623,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 446,
									"end": 623,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 446,
									"end": 623,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 446,
									"end": 623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 446,
									"end": 623,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 511,
									"end": 521,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 548,
									"end": 553,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 534,
									"end": 538,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 534,
									"end": 538,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 534,
									"end": 554,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 585,
									"end": 589,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 565,
									"end": 568,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 565,
									"end": 568,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 565,
									"end": 590,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 609,
									"end": 615,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 601,
									"end": 606,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 601,
									"end": 615,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 601,
									"end": 615,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 601,
									"end": 615,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 601,
									"end": 615,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 446,
									"end": 623,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1961,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1949,
									"end": 1986,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2118,
									"end": 2127,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2208,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2195,
									"end": 2212,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 2142,
									"end": 2213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 287,
									"end": 1039,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d8a92e56861f47d4b541b4704b24c25515b669f947f2b6e44057a5e16ca6856764736f6c634300081a0033",
									".code": [
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "8B926A56"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "8B926A56"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "D96A094A"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "6A5EA38"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "414D91E8"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 287,
											"end": 1039,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 920,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 920,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 920,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 920,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1034,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 325,
											"end": 343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 325,
											"end": 343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 374,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 350,
											"end": 374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 631,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 631,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 631,
											"end": 912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 631,
											"end": 912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 631,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 631,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 631,
											"end": 912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 631,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 920,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 971,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 971,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 985,
											"end": 995,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 996,
											"end": 1000,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 996,
											"end": 1010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 1019,
											"end": 1023,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 996,
											"end": 1025,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 996,
											"end": 1025,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 996,
											"end": 1025,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 971,
											"end": 1026,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1026,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 971,
											"end": 1026,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1026,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 920,
											"end": 1034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 325,
											"end": 343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 350,
											"end": 374,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 350,
											"end": 374,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 350,
											"end": 374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 912,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 631,
											"end": 912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 702,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 702,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 706,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 702,
											"end": 706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 702,
											"end": 706,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 706,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 702,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 702,
											"end": 706,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 702,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 702,
											"end": 719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 702,
											"end": 719,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 742,
											"end": 746,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 754,
											"end": 765,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 702,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 702,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 702,
											"end": 766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 702,
											"end": 766,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 778,
											"end": 796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 799,
											"end": 810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 799,
											"end": 818,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 799,
											"end": 818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 799,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 799,
											"end": 818,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 799,
											"end": 818,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 778,
											"end": 818,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 778,
											"end": 818,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 832,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 829,
											"end": 832,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 832,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 832,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 829,
											"end": 832,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 832,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 832,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 829,
											"end": 832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 829,
											"end": 837,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 837,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 829,
											"end": 837,
											"name": "PUSH",
											"source": 3,
											"value": "40C10F19"
										},
										{
											"begin": 838,
											"end": 848,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 850,
											"end": 860,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 829,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 829,
											"end": 861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "PUSH",
											"source": 3,
											"value": "11C42A99BCDDC27EEA781499D4D35F138C3B2FBD9DA68CDD570892A40838222B"
										},
										{
											"begin": 881,
											"end": 891,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 893,
											"end": 903,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 904,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 877,
											"end": 904,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 877,
											"end": 904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 877,
											"end": 904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 904,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 877,
											"end": 904,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 673,
											"end": 912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 631,
											"end": 912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1199,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1052,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1156,
											"end": 1193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1156,
											"end": 1193,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1156,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1199,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1199,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1199,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1378,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1205,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1313,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1365,
											"end": 1370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1313,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1313,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1313,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1313,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1311,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1648,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1384,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1525,
											"end": 1534,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1539,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1636,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1640,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1549,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 1641,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1549,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1648,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1384,
											"end": 1648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1720,
											"end": 1744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1720,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1709,
											"end": 1744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1861,
											"end": 1866,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1843,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1841,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1868,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1973,
											"end": 1977,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 2014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 2014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2092,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2090,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2077,
											"end": 2094,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2024,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2024,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 2102,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2189,
											"end": 2306,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2189,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2296,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2288,
											"end": 2300,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2435,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2479,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2506,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2512,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2640,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2518,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2591,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2591,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2591,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2591,
											"end": 2615,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2591,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2616,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2571,
											"end": 2634,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2632,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2634,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2571,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2785,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2646,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2737,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2737,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2746,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2779,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2746,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2785,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2785,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2791,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2901,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2885,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2897,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2870,
											"end": 2902,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2986,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2867,
											"end": 2986,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2905,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2905,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2867,
											"end": 2986,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2867,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3025,
											"end": 3026,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3092,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3084,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3071,
											"end": 3093,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3050,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3103,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3050,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 3120,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2791,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3126,
											"end": 3248,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3126,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3199,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3223,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3199,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3189,
											"end": 3224,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3179,
											"end": 3242,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3239,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3240,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3179,
											"end": 3242,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3179,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3126,
											"end": 3248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3126,
											"end": 3248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3393,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3254,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3300,
											"end": 3305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3325,
											"end": 3345,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3316,
											"end": 3345,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3381,
											"end": 3386,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3354,
											"end": 3387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3387,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3354,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3393,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3393,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3393,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3393,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3728,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3399,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3495,
											"end": 3504,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3505,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3478,
											"end": 3510,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3594,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3475,
											"end": 3594,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3513,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3513,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3592,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3513,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3594,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3475,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3634,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3658,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3703,
											"end": 3710,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3683,
											"end": 3692,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3658,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3658,
											"end": 3711,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3658,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3728,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3728,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3877,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3734,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3829,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3807,
											"end": 3829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3807,
											"end": 3829,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3865,
											"end": 3870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3838,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3871,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3838,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3877,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3734,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4234,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3883,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3953,
											"end": 3959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 3999,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 3988,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3977,
											"end": 4000,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4005,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3970,
											"end": 4089,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3970,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3970,
											"end": 4089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4008,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4008,
											"end": 4087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4008,
											"end": 4087,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4008,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3970,
											"end": 4089,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3970,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4209,
											"end": 4216,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4206,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4189,
											"end": 4198,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4185,
											"end": 4207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4153,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4153,
											"end": 4217,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4153,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4217,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4217,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4099,
											"end": 4227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4234,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3883,
											"end": 4234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4358,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4240,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4345,
											"end": 4350,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4327,
											"end": 4351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4327,
											"end": 4351,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4327,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4325,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4352,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4358,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4696,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 4364,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4525,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4512,
											"end": 4521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4500,
											"end": 4526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4604,
											"end": 4605,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4602,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4580,
											"end": 4586,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4536,
											"end": 4607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4536,
											"end": 4607,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4536,
											"end": 4607,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4685,
											"end": 4687,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4674,
											"end": 4683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4667,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4617,
											"end": 4689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4617,
											"end": 4689,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4617,
											"end": 4689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4696,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4702,
											"end": 4792,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4702,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4736,
											"end": 4743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4785,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4765,
											"end": 4786,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4702,
											"end": 4792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4702,
											"end": 4792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4702,
											"end": 4792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4702,
											"end": 4792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4914,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4798,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4883,
											"end": 4888,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4868,
											"end": 4889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4889,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4868,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4861,
											"end": 4866,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4858,
											"end": 4890,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4848,
											"end": 4908,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4904,
											"end": 4905,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4902,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4894,
											"end": 4906,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4848,
											"end": 4908,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4848,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 5057,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4920,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 4979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5011,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4999,
											"end": 5012,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 5012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5021,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5045,
											"end": 5050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5021,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5021,
											"end": 5051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5021,
											"end": 5051,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 5021,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 5057,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 5057,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 5057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 5057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 5057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5408,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5063,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5130,
											"end": 5136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5181,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5167,
											"end": 5176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5158,
											"end": 5165,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5154,
											"end": 5177,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5150,
											"end": 5182,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5266,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5147,
											"end": 5266,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5185,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5185,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5264,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5185,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 5147,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5305,
											"end": 5306,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5383,
											"end": 5390,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5380,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5363,
											"end": 5372,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5359,
											"end": 5381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5330,
											"end": 5391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5330,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5401,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5408,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5408,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5063,
											"end": 5408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5856,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 5414,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5563,
											"end": 5567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5601,
											"end": 5603,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5578,
											"end": 5604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5680,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5667,
											"end": 5684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5658,
											"end": 5664,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5614,
											"end": 5685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5685,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5614,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5748,
											"end": 5766,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5745,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5695,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5695,
											"end": 5767,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5695,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5777,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5845,
											"end": 5847,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5834,
											"end": 5843,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5821,
											"end": 5827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5777,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5777,
											"end": 5849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5777,
											"end": 5849,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5777,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5856,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5856,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5414,
											"end": 5856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5862,
											"end": 6042,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5862,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5987,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5907,
											"end": 5908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5988,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6007,
											"end": 6011,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6004,
											"end": 6005,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6035,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6028,
											"end": 6029,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6458,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6048,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6088,
											"end": 6095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6129,
											"end": 6130,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6111,
											"end": 6131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6111,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6106,
											"end": 6131,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6106,
											"end": 6131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6163,
											"end": 6164,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6145,
											"end": 6165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6200,
											"end": 6201,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6202,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6222,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6240,
											"end": 6251,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6222,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 6222,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6222,
											"end": 6252,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6222,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6211,
											"end": 6252,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6401,
											"end": 6402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6392,
											"end": 6399,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6385,
											"end": 6386,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6382,
											"end": 6404,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6362,
											"end": 6363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6355,
											"end": 6364,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6335,
											"end": 6418,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 6312,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6312,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 6431,
											"end": 6449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6312,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6312,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6458,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6048,
											"end": 6458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"exchange.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ARST()": "414d91e8",
							"MPP()": "8b926a56",
							"buy(uint256)": "d96a094a",
							"extracARST()": "06a5ea38",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ARST\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_MPP\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BUY\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARST\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MPP\",\"outputs\":[{\"internalType\":\"contract MintableERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountARST\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extracARST\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"exchange.sol\":\"Exchange\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"exchange.sol\":{\"keccak256\":\"0x354ff04ff7f501cc7cd64d55b970f3d0d893ccae0365ef31621b79bcfc1e601e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca72e41c24cc6bc0a072440515e95501a3712598794f64addc229d1f76db209b\",\"dweb:/ipfs/QmVs6Y598exG76dR5yhKnDcMUJCDv6qLu1by5NP8wXQiXx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "exchange.sol:Exchange",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 274,
								"contract": "exchange.sol:Exchange",
								"label": "ARST",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)225"
							},
							{
								"astId": 277,
								"contract": "exchange.sol:Exchange",
								"label": "MPP",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(MintableERC20)269"
							},
							{
								"astId": 279,
								"contract": "exchange.sol:Exchange",
								"label": "price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)225": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(MintableERC20)269": {
								"encoding": "inplace",
								"label": "contract MintableERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MintableERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"exchange.sol\":\"MintableERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"exchange.sol\":{\"keccak256\":\"0x354ff04ff7f501cc7cd64d55b970f3d0d893ccae0365ef31621b79bcfc1e601e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca72e41c24cc6bc0a072440515e95501a3712598794f64addc229d1f76db209b\",\"dweb:/ipfs/QmVs6Y598exG76dR5yhKnDcMUJCDv6qLu1by5NP8wXQiXx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"exchange.sol": {
				"ast": {
					"absolutePath": "exchange.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Exchange": [
							374
						],
						"IERC20": [
							225
						],
						"MintableERC20": [
							269
						],
						"Ownable": [
							147
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 375,
							"sourceUnit": 226,
							"src": "65:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 375,
							"sourceUnit": 148,
							"src": "123:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 260,
										"name": "IERC20",
										"nameLocations": [
											"206:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "206:6:3"
									},
									"id": 261,
									"nodeType": "InheritanceSpecifier",
									"src": "206:6:3"
								}
							],
							"canonicalName": "MintableERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 269,
							"linearizedBaseContracts": [
								269,
								225
							],
							"name": "MintableERC20",
							"nameLocation": "189:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "238:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "251:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "243:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "263:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "255:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:28:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "279:0:3"
									},
									"scope": 269,
									"src": "229:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 375,
							"src": "179:104:3",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 270,
										"name": "Ownable",
										"nameLocations": [
											"309:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "309:7:3"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "309:7:3"
								}
							],
							"canonicalName": "Exchange",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374,
								147,
								255
							],
							"name": "Exchange",
							"nameLocation": "296:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "414d91e8",
									"id": 274,
									"mutability": "mutable",
									"name": "ARST",
									"nameLocation": "339:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 374,
									"src": "325:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 273,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 272,
											"name": "IERC20",
											"nameLocations": [
												"325:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "325:6:3"
										},
										"referencedDeclaration": 225,
										"src": "325:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b926a56",
									"id": 277,
									"mutability": "mutable",
									"name": "MPP",
									"nameLocation": "371:3:3",
									"nodeType": "VariableDeclaration",
									"scope": 374,
									"src": "350:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_MintableERC20_$269",
										"typeString": "contract MintableERC20"
									},
									"typeName": {
										"id": 276,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 275,
											"name": "MintableERC20",
											"nameLocations": [
												"350:13:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 269,
											"src": "350:13:3"
										},
										"referencedDeclaration": 269,
										"src": "350:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MintableERC20_$269",
											"typeString": "contract MintableERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "389:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 374,
									"src": "381:13:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "381:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "11c42a99bcddc27eea781499d4d35f138c3b2fbd9da68cdd570892a40838222b",
									"id": 285,
									"name": "BUY",
									"nameLocation": "407:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"indexed": false,
												"mutability": "mutable",
												"name": "who",
												"nameLocation": "419:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "411:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "432:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "424:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:29:3"
									},
									"src": "401:39:3"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "523:100:3",
										"statements": [
											{
												"expression": {
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "ARST",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "534:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 300,
																"name": "_ARST",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "548:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 299,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "541:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "541:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "534:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "534:20:3"
											},
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 304,
														"name": "MPP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "565:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MintableERC20_$269",
															"typeString": "contract MintableERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 306,
																"name": "_MPP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "585:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 305,
															"name": "MintableERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "571:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MintableERC20_$269_$",
																"typeString": "type(contract MintableERC20)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "571:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MintableERC20_$269",
															"typeString": "contract MintableERC20"
														}
													},
													"src": "565:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MintableERC20_$269",
														"typeString": "contract MintableERC20"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "565:25:3"
											},
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 310,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "601:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 311,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "609:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "601:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "601:14:3"
											}
										]
									},
									"id": 315,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 294,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "511:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "515:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "511:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 296,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 293,
												"name": "Ownable",
												"nameLocations": [
													"503:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "503:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "503:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "_ARST",
												"nameLocation": "466:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "458:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "_MPP",
												"nameLocation": "481:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "473:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "495:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "487:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:45:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:0:3"
									},
									"scope": 374,
									"src": "446:177:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "673:239:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 323,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "721:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "725:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "721:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 327,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "742:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$374",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$374",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "734:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 325,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "734:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "734:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "_amountARST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "754:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 320,
															"name": "ARST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "702:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "707:12:3",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 224,
														"src": "702:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "702:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "702:64:3"
											},
											{
												"assignments": [
													333
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "_amountMPP",
														"nameLocation": "786:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 352,
														"src": "778:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 332,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "778:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 337,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 334,
														"name": "_amountARST",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "799:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 335,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "799:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "778:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 341,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "838:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "842:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "838:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "_amountMPP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "850:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 338,
															"name": "MPP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "829:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MintableERC20_$269",
																"typeString": "contract MintableERC20"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "833:4:3",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 268,
														"src": "829:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "829:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "829:32:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 347,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "881:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "885:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "881:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 349,
															"name": "_amountMPP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "893:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "BUY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "877:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "877:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "EmitStatement",
												"src": "872:32:3"
											}
										]
									},
									"functionSelector": "d96a094a",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "640:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "_amountARST",
												"nameLocation": "652:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "644:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "643:21:3"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:0:3"
									},
									"scope": 374,
									"src": "631:281:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "960:74:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 361,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "985:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "989:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "985:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 367,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1019:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Exchange_$374",
																				"typeString": "contract Exchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Exchange_$374",
																				"typeString": "contract Exchange"
																			}
																		],
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1011:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 365,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1011:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1011:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 363,
																	"name": "ARST",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "996:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1001:9:3",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 182,
																"src": "996:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "996:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 358,
															"name": "ARST",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "971:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "976:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "971:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "971:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "971:55:3"
											}
										]
									},
									"functionSelector": "06a5ea38",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 355,
												"name": "onlyOwner",
												"nameLocations": [
													"951:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "951:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "951:9:3"
										}
									],
									"name": "extracARST",
									"nameLocation": "929:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "939:2:3"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:0:3"
									},
									"scope": 374,
									"src": "920:114:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 375,
							"src": "287:752:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								285
							]
						}
					],
					"src": "35:1004:3"
				},
				"id": 3
			}
		}
	}
}